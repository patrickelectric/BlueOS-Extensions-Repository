[
    {
        "identifier": "raultrombin.navigator-webassistant",
        "name": "Navigator WebAssistant",
        "website": "https://github.com/RaulTrombin/blueos-navigator-web-assistant",
        "docker": "raulelektron/blueos_navigator_webassistant",
        "description": "Use navigator board through webservices.",
        "extension_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/raultrombin/navigator-webassistant/extension_logo.png",
        "company_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/raultrombin/company_logo.png",
        "versions": {
            "0.0.0": {
                "identifier": "11930ba8-160e-51ed-a45d-21213c9f4c20",
                "type": "education",
                "website": null,
                "images": [
                    {
                        "expanded_size": 13222204,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:397c8a86a25d57079e23afc9a1b3da8affa81e634b567058f702e902d0ede456"
                    }
                ],
                "authors": [
                    {
                        "name": "Raul Victor Trombin",
                        "email": "raulvtrombin@gmail.com"
                    }
                ],
                "filter_tags": [
                    "rov",
                    "robot"
                ],
                "extra_links": {},
                "tag": "0.0.0",
                "docs": null,
                "readme": "# BlueOS's Navigator Extension\n\nNavigator Webassistant extension is a webserver that allows user to control navigator hardware.\nThis application uses the navigator-assistant to interface with navigator board, and users can control it from Websocket and RestAPI.\n\n## Instructions\n\nAccess the extensions manager and install with the following parameters:\n\nExtensions Manager:\n```\nblueos.local/tools/extensions-manager\n```\nParameters:\n\n```\nraulelektron.blueos_navigator_webassistant\n\nNavigator Assistant\n\nlatest\n\n{\n  \"ExposedPorts\": {\n    \"8080/tcp\": {}\n  },\n  \"HostConfig\": {\n    \"Privileged\": true,\n    \"PortBindings\": {\n      \"8080/tcp\": [\n        {\n          \"HostPort\": \"\"\n        }\n      ]\n    }\n  }\n}\n```\n\nYou can also run Navigator Assistant locally or on other extensions. Please check [navigator-web-assistant].\n\nYou can also use the Jupyter extension to try some fast python and websocket applications.\n\n\n[navigator-web-assistant]: https://github.com/RaulTrombin/navigator-web-assistant",
                "support": null,
                "requirements": null,
                "company": {
                    "about": "Control navigator hardware using webservices",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "8080/tcp": {}
                    },
                    "HostConfig": {
                        "Privileged": true,
                        "PortBindings": {
                            "8080/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    {
        "identifier": "bluerobotics.power-switch-calibration",
        "name": "PowerSwitch Calibration",
        "website": "https://github.com/rjehangir/BlueOS-PS-Calibration/",
        "docker": "rjehangir/blueos-ps-calibration",
        "description": "Calibrate offset on BlueBoat for improved measurements",
        "extension_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/bluerobotics/power-switch-calibration/extension_logo.png",
        "company_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/bluerobotics/company_logo.png",
        "versions": {
            "v1.0.0": {
                "identifier": "bcc4553d-e923-5310-93d0-4a775fe22322",
                "type": "device-integration",
                "website": null,
                "images": [
                    {
                        "expanded_size": 7915983,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:e542fdb888f196961b5cb710cbada54be76cfff90b16eb8e73a434f34abf672f"
                    }
                ],
                "authors": [
                    {
                        "name": "Rustom Jehangir",
                        "email": "rusty@bluerobotics.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.0",
                "docs": null,
                "readme": "# BlueOS Power Switch Calibration Extension\n\nThis extension provides a simple routine to calibrate the offset of the \"Power Switch\" used in the BlueBoat to provide a more accurate current and power measurement.\n\n## Build\nExecute the following command to build your extension:\n\n   ```shell\n   docker buildx build --platform linux/arm/v7 . -t my_docker_user/blueos-ps-calibration:latest --output type=registry\n    ```\n",
                "support": null,
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "80/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "80/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    {
        "identifier": "bluerobotics.cockpit",
        "name": "Cockpit",
        "website": "https://github.com/bluerobotics/cockpit",
        "docker": "bluerobotics/cockpit",
        "description": "Blue Robotics' next generation control interface; under development",
        "extension_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/bluerobotics/cockpit/extension_logo.png",
        "company_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/bluerobotics/company_logo.png",
        "versions": {
            "v1.0.0-beta.21": {
                "identifier": "d9e2c290-30f7-5eb0-8ec5-c6a6ded05644",
                "type": "other",
                "website": null,
                "images": [
                    {
                        "expanded_size": 15621079,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:75a6bc6627b702f27c18889f786ac2910593944e6406cc327e44d918d4ccfb13"
                    },
                    {
                        "expanded_size": 15835048,
                        "platform": {
                            "architecture": "arm64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:fb27d49ce49a8cf2f9ac00ea0e7524e205bd45d878aafb9fa6831c77b827fbfa"
                    },
                    {
                        "expanded_size": 15869533,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:9c6a201cb0264f87360eac89d48ff034a1b3c518fdff13391d2936cb2398a76a"
                    }
                ],
                "authors": [
                    {
                        "name": "Rafael Araujo Lehmkuhl",
                        "email": "rafael@bluerobotics.com"
                    },
                    {
                        "name": "Patrick Jos\u00e9 Pereira",
                        "email": "patrick@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "vehicle-control",
                    "control-station",
                    "ground-station",
                    "navigation",
                    "joystick",
                    "mission-planning"
                ],
                "extra_links": {},
                "tag": "v1.0.0-beta.21",
                "docs": null,
                "readme": null,
                "support": "https://discuss.bluerobotics.com/c/bluerobotics-software",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "8000/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "8000/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            },
            "v1.0.0-beta.20": {
                "identifier": "6d104a93-7dd0-5e3d-a03b-93923a62c47e",
                "type": "other",
                "website": null,
                "images": [
                    {
                        "expanded_size": 15821318,
                        "platform": {
                            "architecture": "arm64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:690181829375f70aaeb4dc884ed8bbd0c7627bfe911880767850b865f8891b78"
                    },
                    {
                        "expanded_size": 15865306,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:5508494d94cef80625d817764c7221b0b09d417fb31def22ff25f37ef8fbef42"
                    },
                    {
                        "expanded_size": 15609220,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:cab0c9ea9afb911150f314d1c09ce6a2825b91750ad5c062976748a56d8b272b"
                    }
                ],
                "authors": [
                    {
                        "name": "Rafael Araujo Lehmkuhl",
                        "email": "rafael@bluerobotics.com"
                    },
                    {
                        "name": "Patrick Jos\u00e9 Pereira",
                        "email": "patrick@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "vehicle-control",
                    "control-station",
                    "ground-station",
                    "navigation",
                    "joystick",
                    "mission-planning"
                ],
                "extra_links": {},
                "tag": "v1.0.0-beta.20",
                "docs": null,
                "readme": null,
                "support": "https://discuss.bluerobotics.com/c/bluerobotics-software",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "8000/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "8000/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            },
            "v1.0.0-beta.19": {
                "identifier": "d5c5b2ac-d106-5382-acf4-ad4fb39fb41f",
                "type": "other",
                "website": null,
                "images": [
                    {
                        "expanded_size": 15598859,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:8466a6aa0fab80d4ee9ace7e95a564777cb1aeb81b541b7b81926ff77422a758"
                    },
                    {
                        "expanded_size": 15810949,
                        "platform": {
                            "architecture": "arm64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:bf829ed4b3756cf975711ebb34159328dc0df1e4580e8615f47031b2ac2b344f"
                    }
                ],
                "authors": [
                    {
                        "name": "Rafael Araujo Lehmkuhl",
                        "email": "rafael@bluerobotics.com"
                    },
                    {
                        "name": "Patrick Jos\u00e9 Pereira",
                        "email": "patrick@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "vehicle-control",
                    "control-station",
                    "ground-station",
                    "navigation",
                    "joystick",
                    "mission-planning"
                ],
                "extra_links": {},
                "tag": "v1.0.0-beta.19",
                "docs": null,
                "readme": null,
                "support": "https://discuss.bluerobotics.com/c/bluerobotics-software",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "8000/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "8000/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            },
            "v1.0.0-beta.18": {
                "identifier": "8b87ba8f-8a01-51ca-a4fd-b1d5b21d3f10",
                "type": "other",
                "website": null,
                "images": [
                    {
                        "expanded_size": 15598779,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:0ffe807162f11bc8c8328c5617c254b9d8fbd4d454581b8c638a3492ffb4e0b0"
                    },
                    {
                        "expanded_size": 15810884,
                        "platform": {
                            "architecture": "arm64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:08d23911f5487bbf628257fc0ad7e4334d4970e47f2de8c8e214f217e3a496d6"
                    },
                    {
                        "expanded_size": 15854889,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:75e10bcbdddd69a6fbe88e8ad6dbab5b7a45ccde730400420873b9850b7133d0"
                    }
                ],
                "authors": [
                    {
                        "name": "Rafael Araujo Lehmkuhl",
                        "email": "rafael@bluerobotics.com"
                    },
                    {
                        "name": "Patrick Jos\u00e9 Pereira",
                        "email": "patrick@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "vehicle-control",
                    "control-station",
                    "ground-station",
                    "navigation",
                    "joystick",
                    "mission-planning"
                ],
                "extra_links": {},
                "tag": "v1.0.0-beta.18",
                "docs": null,
                "readme": null,
                "support": "https://discuss.bluerobotics.com/c/bluerobotics-software",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "8000/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "8000/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            },
            "v1.0.0-beta.17": {
                "identifier": "ccc287b6-57da-5c9b-bb66-3abcc272082e",
                "type": "other",
                "website": null,
                "images": [
                    {
                        "expanded_size": 14336567,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:ecf23276f78e2d9c95f0c0bd694c2d8e319907f9a0eb2b65e7b7d5033fc01e97"
                    },
                    {
                        "expanded_size": 14548655,
                        "platform": {
                            "architecture": "arm64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:b3c4b67fe74cd670f7c71ac36cbacd208492362e92bbff56c1f8b0fd1378345a"
                    },
                    {
                        "expanded_size": 14592647,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:7b7ff364e09cb83066f0f6f51516d98e69a7850ad61f4ca320593b0a1764a096"
                    }
                ],
                "authors": [
                    {
                        "name": "Rafael Araujo Lehmkuhl",
                        "email": "rafael@bluerobotics.com"
                    },
                    {
                        "name": "Patrick Jos\u00e9 Pereira",
                        "email": "patrick@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "vehicle-control",
                    "control-station",
                    "ground-station",
                    "navigation",
                    "joystick",
                    "mission-planning"
                ],
                "extra_links": {},
                "tag": "v1.0.0-beta.17",
                "docs": null,
                "readme": null,
                "support": "https://discuss.bluerobotics.com/c/bluerobotics-software",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "8000/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "8000/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            },
            "v1.0.0-beta.16": {
                "identifier": "c46818b7-e9e0-57a5-8957-7a2368fb7ef2",
                "type": "other",
                "website": null,
                "images": [
                    {
                        "expanded_size": 14606254,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:683bf0af571dc98c84af7a722447a3b1afc3e97a808a8295ac5f6c45fe07e2bf"
                    },
                    {
                        "expanded_size": 14818355,
                        "platform": {
                            "architecture": "arm64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:fb41f3cf3cec98b01e938578ff471777b6d70d5d54fe59fab186abe48aa67123"
                    },
                    {
                        "expanded_size": 14862351,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:c9f489fac4fe5a452ce934d38200dd58a6b7be1636544128426f691188ae7294"
                    }
                ],
                "authors": [
                    {
                        "name": "Rafael Araujo Lehmkuhl",
                        "email": "rafael@bluerobotics.com"
                    },
                    {
                        "name": "Patrick Jos\u00e9 Pereira",
                        "email": "patrick@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "vehicle-control",
                    "control-station",
                    "ground-station",
                    "navigation",
                    "joystick",
                    "mission-planning"
                ],
                "extra_links": {},
                "tag": "v1.0.0-beta.16",
                "docs": null,
                "readme": null,
                "support": "https://discuss.bluerobotics.com/c/bluerobotics-software",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "8000/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "8000/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            },
            "v1.0.0-beta.15": {
                "identifier": "c4d5d465-fa5d-56ef-be9e-03c2cddbeb74",
                "type": "other",
                "website": null,
                "images": [
                    {
                        "expanded_size": 14606235,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:2d411e8d83f3e1921b429166c1b160c9813a7591d3cfded3a8330255fb651959"
                    },
                    {
                        "expanded_size": 14862357,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:431e2ea212e30a2f549633e5b840fdce27034a1817a97de62ebcce2bdf899877"
                    }
                ],
                "authors": [
                    {
                        "name": "Rafael Araujo Lehmkuhl",
                        "email": "rafael@bluerobotics.com"
                    },
                    {
                        "name": "Patrick Jos\u00e9 Pereira",
                        "email": "patrick@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "vehicle-control",
                    "control-station",
                    "ground-station",
                    "navigation",
                    "joystick",
                    "mission-planning"
                ],
                "extra_links": {},
                "tag": "v1.0.0-beta.15",
                "docs": null,
                "readme": null,
                "support": "https://discuss.bluerobotics.com/c/bluerobotics-software",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "8000/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "8000/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            },
            "v1.0.0-beta.14": {
                "identifier": "05914529-1bd8-5334-8302-7681768f017e",
                "type": "other",
                "website": null,
                "images": [
                    {
                        "expanded_size": 14606997,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:b492a88758ec5c68bf34229ed769a5bc69e1bc62a7f8568e7fe8a0d843f56c60"
                    },
                    {
                        "expanded_size": 14819085,
                        "platform": {
                            "architecture": "arm64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:98e6a964eada966421abb7b1f5f8e7d2544943ebd6fab900b2a8be23bf804a96"
                    },
                    {
                        "expanded_size": 14863090,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:8aa06572b20c18da52fe51e28519ef0de5246083db66e28f8245c58cd0d327e8"
                    }
                ],
                "authors": [
                    {
                        "name": "Rafael Araujo Lehmkuhl",
                        "email": "rafael@bluerobotics.com"
                    },
                    {
                        "name": "Patrick Jos\u00e9 Pereira",
                        "email": "patrick@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "vehicle-control",
                    "control-station",
                    "ground-station",
                    "navigation",
                    "joystick",
                    "mission-planning"
                ],
                "extra_links": {},
                "tag": "v1.0.0-beta.14",
                "docs": null,
                "readme": null,
                "support": "https://discuss.bluerobotics.com/c/bluerobotics-software",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "8000/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "8000/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            },
            "v1.0.0-beta.13": {
                "identifier": "48b94329-b61c-5daa-9b62-45fb01a4157c",
                "type": "other",
                "website": null,
                "images": [
                    {
                        "expanded_size": 13824987,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:3d73bdb4dc25115719f74067678530034fe48944097f3f86457eb26108e37fa1"
                    },
                    {
                        "expanded_size": 13864533,
                        "platform": {
                            "architecture": "arm64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:300df6a7226a6c0ece286bff1ee334eff62465538ee17d922f6383afd5b997d3"
                    },
                    {
                        "expanded_size": 13953728,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:7deb8669f07fe8365d32a969d249094b6a860c8eaf7d1c6931e74ef0d42ff257"
                    }
                ],
                "authors": [
                    {
                        "name": "Rafael Araujo Lehmkuhl",
                        "email": "rafael@bluerobotics.com"
                    },
                    {
                        "name": "Patrick Jos\u00e9 Pereira",
                        "email": "patrick@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "vehicle-control",
                    "control-station",
                    "ground-station",
                    "navigation",
                    "joystick",
                    "mission-planning"
                ],
                "extra_links": {},
                "tag": "v1.0.0-beta.13",
                "docs": null,
                "readme": null,
                "support": "https://discuss.bluerobotics.com/c/bluerobotics-software",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "8000/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "8000/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            },
            "v1.0.0-beta.12": {
                "identifier": "2dd50e51-2f3c-552b-8e1f-c85a524ca7cb",
                "type": "other",
                "website": null,
                "images": [
                    {
                        "expanded_size": 13792434,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:ac0f19bc304990816ebacd561d9b07baa797ca2ef64faa24a7f3843bc00d13d9"
                    },
                    {
                        "expanded_size": 13831994,
                        "platform": {
                            "architecture": "arm64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:c7030a3ae068ca9e4116ec5d8a266d13556271e907806b183a124ad7abdf6efa"
                    },
                    {
                        "expanded_size": 13921210,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:b7daccf1097babf959f16005d566dbffd5df701b89b7d7b024fd0db3ba256d80"
                    }
                ],
                "authors": [
                    {
                        "name": "Rafael Araujo Lehmkuhl",
                        "email": "rafael@bluerobotics.com"
                    },
                    {
                        "name": "Patrick Jos\u00e9 Pereira",
                        "email": "patrick@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "vehicle-control",
                    "control-station",
                    "ground-station",
                    "navigation",
                    "joystick",
                    "mission-planning"
                ],
                "extra_links": {},
                "tag": "v1.0.0-beta.12",
                "docs": null,
                "readme": null,
                "support": "https://discuss.bluerobotics.com/c/bluerobotics-software",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "8000/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "8000/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            },
            "v1.0.0-beta.8": {
                "identifier": "1cfde611-7f6e-5670-acc8-045a09608c0a",
                "type": "other",
                "website": null,
                "images": [
                    {
                        "expanded_size": 12559794,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:db32e3c0f690375837db0c38743bcc202e5dc56a5886585a6db5c3cc0a9d50a8"
                    },
                    {
                        "expanded_size": 12897150,
                        "platform": {
                            "architecture": "arm64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:830999f377e95a8114793f41fd5ec6099d76744e6cce2aed36a88af05fedec5a"
                    },
                    {
                        "expanded_size": 13000413,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:0079d3999c2c5893c7c7121b8b436d2dabcba106e9a6e9374c6cccfe755bd5b0"
                    }
                ],
                "authors": [
                    {
                        "name": "Rafael Araujo Lehmkuhl",
                        "email": "rafael@bluerobotics.com"
                    },
                    {
                        "name": "Patrick Jos\u00e9 Pereira",
                        "email": "patrick@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "vehicle-control",
                    "control-station",
                    "ground-station",
                    "navigation",
                    "joystick",
                    "mission-planning"
                ],
                "extra_links": {},
                "tag": "v1.0.0-beta.8",
                "docs": null,
                "readme": null,
                "support": "https://discuss.bluerobotics.com/c/bluerobotics-software",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "8000/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "8000/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            },
            "v1.0.0-beta.7": {
                "identifier": "229cbf3f-8010-550b-9b25-3e356a0a9c35",
                "type": "other",
                "website": null,
                "images": [
                    {
                        "expanded_size": 12517490,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:2aa3c3d0560b14003fb3752e2c84d30898a066876af19067333c3d6cb650efd1"
                    },
                    {
                        "expanded_size": 12854834,
                        "platform": {
                            "architecture": "arm64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:ae45f97aa0d7fe6c57bed8eb57e19539a8161f1d341a2fcf0f29e3aac8a8281e"
                    },
                    {
                        "expanded_size": 12958106,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:2bb1e2463ac734f0f2924ecdb12ec1f6e4f7e20729a0e99e3670fa1170a898ee"
                    }
                ],
                "authors": [
                    {
                        "name": "Rafael Araujo Lehmkuhl",
                        "email": "rafael@bluerobotics.com"
                    },
                    {
                        "name": "Patrick Jos\u00e9 Pereira",
                        "email": "patrick@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "vehicle-control",
                    "control-station",
                    "ground-station",
                    "navigation",
                    "joystick",
                    "mission-planning"
                ],
                "extra_links": {},
                "tag": "v1.0.0-beta.7",
                "docs": null,
                "readme": null,
                "support": "https://discuss.bluerobotics.com/c/bluerobotics-software",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "8000/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "8000/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            },
            "v1.0.0-beta.6": {
                "identifier": "ae571bf1-af4d-53a2-9010-c9deab40639f",
                "type": "other",
                "website": null,
                "images": [
                    {
                        "expanded_size": 12503364,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:3fcdc56b311c1bc03201a2e39156a95449474516d483d16d419e4a8ca026a9d4"
                    },
                    {
                        "expanded_size": 12840728,
                        "platform": {
                            "architecture": "arm64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:0afef5ac70baf096d4f05f9adf4aac68015d4d85b03a60940415c0fb5e0177fb"
                    },
                    {
                        "expanded_size": 12943992,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:2fbe021fdb1b67f86fd3b69a89151bba702ce58d7896e3374a06086fee46af66"
                    }
                ],
                "authors": [
                    {
                        "name": "Rafael Araujo Lehmkuhl",
                        "email": "rafael@bluerobotics.com"
                    },
                    {
                        "name": "Patrick Jos\u00e9 Pereira",
                        "email": "patrick@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "vehicle-control",
                    "control-station",
                    "ground-station",
                    "navigation",
                    "joystick",
                    "mission-planning"
                ],
                "extra_links": {},
                "tag": "v1.0.0-beta.6",
                "docs": null,
                "readme": null,
                "support": "https://discuss.bluerobotics.com/c/bluerobotics-software",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "8000/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "8000/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            },
            "v1.0.0-beta.5": {
                "identifier": "3c376a78-ad61-562c-a79a-1c76dbdb7832",
                "type": "other",
                "website": null,
                "images": [
                    {
                        "expanded_size": 12492148,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:30d9e3c0c53b55b2514b24a314b16b4da139ce282cc827bf6931d14d14e525e1"
                    },
                    {
                        "expanded_size": 12829506,
                        "platform": {
                            "architecture": "arm64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:6f537919295007fac6c7705500ea52f05e25a58888d2ed52bff37a1129d21a89"
                    },
                    {
                        "expanded_size": 12932763,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:28b9b6cadf2c97008ea69af63d13242296ec92759181dfa3c6b2846d20936b04"
                    }
                ],
                "authors": [
                    {
                        "name": "Rafael Araujo Lehmkuhl",
                        "email": "rafael@bluerobotics.com"
                    },
                    {
                        "name": "Patrick Jos\u00e9 Pereira",
                        "email": "patrick@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "vehicle-control",
                    "control-station",
                    "ground-station",
                    "navigation",
                    "joystick",
                    "mission-planning"
                ],
                "extra_links": {},
                "tag": "v1.0.0-beta.5",
                "docs": null,
                "readme": null,
                "support": "https://discuss.bluerobotics.com/c/bluerobotics-software",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "8000/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "8000/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            },
            "v1.0.0-beta.4": {
                "identifier": "e0a24959-f811-520a-8b49-94aa3f96f963",
                "type": "other",
                "website": null,
                "images": [
                    {
                        "expanded_size": 12492152,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:847b44ead971ab57cf1614597b6c5b56a00376f5ebc64ef280eac938aeb1947b"
                    },
                    {
                        "expanded_size": 12829498,
                        "platform": {
                            "architecture": "arm64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:edbb03b015636c846fafaee3fcf07b146e19cc3d920320a40a8147697491dcc2"
                    },
                    {
                        "expanded_size": 12932781,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:dfba1b94c33d7241e78eb25f8e7e84244c89a5a58b00327c6601fb5d6f5891fc"
                    }
                ],
                "authors": [
                    {
                        "name": "Rafael Araujo Lehmkuhl",
                        "email": "rafael@bluerobotics.com"
                    },
                    {
                        "name": "Patrick Jos\u00e9 Pereira",
                        "email": "patrick@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "vehicle-control",
                    "control-station",
                    "ground-station",
                    "navigation",
                    "joystick",
                    "mission-planning"
                ],
                "extra_links": {},
                "tag": "v1.0.0-beta.4",
                "docs": null,
                "readme": null,
                "support": "https://discuss.bluerobotics.com/c/bluerobotics-software",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "8000/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "8000/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            },
            "v1.0.0-beta.3": {
                "identifier": "a8a0fc96-ed4a-5e9b-93ef-5b355450fee3",
                "type": "other",
                "website": null,
                "images": [
                    {
                        "expanded_size": 12491518,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:1da3ab5cf742728b3a2b4d75b2ae1d0776fbb1cc848d08a3851a42d99494ac7b"
                    }
                ],
                "authors": [
                    {
                        "name": "Rafael Araujo Lehmkuhl",
                        "email": "rafael@bluerobotics.com"
                    },
                    {
                        "name": "Patrick Jos\u00e9 Pereira",
                        "email": "patrick@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "vehicle-control",
                    "control-station",
                    "ground-station",
                    "navigation",
                    "joystick",
                    "mission-planning"
                ],
                "extra_links": {},
                "tag": "v1.0.0-beta.3",
                "docs": null,
                "readme": null,
                "support": "https://discuss.bluerobotics.com/c/bluerobotics-software",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "8000/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "8000/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            },
            "v1.0.0-beta.2": {
                "identifier": "29d51813-1c06-5806-8f6c-ba2d92024994",
                "type": "other",
                "website": null,
                "images": [
                    {
                        "expanded_size": 12492632,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:283ff9b0d19c35d73b221dcd2284555a7ce7ee0c34bb04f9bb7a6978e90df550"
                    },
                    {
                        "expanded_size": 12829977,
                        "platform": {
                            "architecture": "arm64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:b9ea92debdda150a8db301eeb4b4f99c745959eb3734f265dfa5446caa13e2b5"
                    },
                    {
                        "expanded_size": 12933238,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:f904553d67ba5fa9f4ecb899dd71a5346a9cca4921d18050bfcff0fc54b3b519"
                    }
                ],
                "authors": [
                    {
                        "name": "Rafael Araujo Lehmkuhl",
                        "email": "rafael@bluerobotics.com"
                    },
                    {
                        "name": "Patrick Jos\u00e9 Pereira",
                        "email": "patrick@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "vehicle-control",
                    "control-station",
                    "ground-station",
                    "navigation",
                    "joystick",
                    "mission-planning"
                ],
                "extra_links": {},
                "tag": "v1.0.0-beta.2",
                "docs": null,
                "readme": null,
                "support": "https://discuss.bluerobotics.com/c/bluerobotics-software",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "8000/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "8000/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            },
            "v1.0.0-beta.1": {
                "identifier": "49610330-7739-5e30-b51c-2bd6b80b36fc",
                "type": "other",
                "website": null,
                "images": [
                    {
                        "expanded_size": 12445691,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:3eb6c817a8aa0536b29b67e06578538f0c51d9c1cdd4e926390e726245296cde"
                    },
                    {
                        "expanded_size": 12783049,
                        "platform": {
                            "architecture": "arm64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:5b8349937f2f018a0b43e3c78fff1e6d461d11a01b7833a1470bde18b55b3aea"
                    },
                    {
                        "expanded_size": 12886304,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:9df337791ba444253eafd88b701f8b5756896ae7fc9b167cbc2812bcdb85f2fe"
                    }
                ],
                "authors": [
                    {
                        "name": "Rafael Araujo Lehmkuhl",
                        "email": "rafael@bluerobotics.com"
                    },
                    {
                        "name": "Patrick Jos\u00e9 Pereira",
                        "email": "patrick@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "vehicle-control",
                    "control-station",
                    "ground-station",
                    "navigation",
                    "joystick",
                    "mission-planning"
                ],
                "extra_links": {},
                "tag": "v1.0.0-beta.1",
                "docs": null,
                "readme": null,
                "support": "https://discuss.bluerobotics.com/c/bluerobotics-software",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "8000/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "8000/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    {
        "identifier": "bluerobotics.water-linked-dvl",
        "name": "Water Linked DVL",
        "website": "https://github.com/bluerobotics/BlueOS-Water-Linked-DVL/",
        "docker": "bluerobotics/blueos-water-linked-dvl",
        "description": "Enables ROV position holding and navigation",
        "extension_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/bluerobotics/water-linked-dvl/extension_logo.png",
        "company_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/bluerobotics/company_logo.png",
        "versions": {
            "v1.0.5": {
                "identifier": "d4a8e194-7374-5f38-9e6b-05d689366907",
                "type": "device-integration",
                "website": "https://github.com/bluerobotics/BlueOS-Water-Linked-DVL",
                "images": [
                    {
                        "expanded_size": 71286141,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:7af61750294fa6eb726e73f855d6ec207ba7bf2c0af1e1ac9626c9e29b54a924"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "positioning",
                    "navigation",
                    "doppler-velocity-log"
                ],
                "extra_links": {},
                "tag": "v1.0.5",
                "docs": null,
                "readme": "# BlueOS-Water-Linked-DVL\n\n## Changelog\n\n### v1.0.5\n - Update texts to make support of DVL A125 obvious\n\n### v1.0.4\n - Fix issue introduced in v1.0.3 where the extension was unable to talk to Cable-guy\n\n### v1.0.3\n - Uses an random available port instead of 9001 to avoid conflict\n - Updated menu icon\n\n### v1.0.2\n - Improved style\n\n### v1.0.1\n - Fixed an issue where the driver was sending Rangefinder messages with invalid data\n\nThis is a docker implementation of a Water Linked DVL A50 and A125 driver as a BlueOS Extension.\n\n## Install\n\nInstall it from [BlueOS extensions tab](https://docs.bluerobotics.com/ardusub-zola/software/onboard/BlueOS-1.1/extensions/).\n\nThe service will show in the \"Extension Manager\" section in BlueOS, where there are some configuration options.\n",
                "support": "https://github.com/bluerobotics/BlueOS-Water-Linked-DVL/issues",
                "requirements": "core >= 1.1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "9001/tcp": {}
                    },
                    "HostConfig": {
                        "Binds": [
                            "/root/.config:/root/.config"
                        ],
                        "ExtraHosts": [
                            "host.docker.internal:host-gateway"
                        ],
                        "PortBindings": {
                            "9001/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            },
            "v1.0.3": {
                "identifier": "a6397468-59fb-5808-9706-ea15c6948122",
                "type": "device-integration",
                "website": "https://github.com/bluerobotics/BlueOS-Water-Linked-DVL",
                "images": [
                    {
                        "expanded_size": 71173047,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:18c4bf17906b278c44e840b40f8561928283ea151f48958ef42dd8ee0d95eb48"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "positioning",
                    "navigation",
                    "doppler-velocity-log"
                ],
                "extra_links": {},
                "tag": "v1.0.3",
                "docs": null,
                "readme": "# BlueOS-Water-Linked-DVL\n\n## Changelog\n\n### v1.0.3\n - Uses an random available port instead of 9001 to avoid conflict\n - Updated menu icon\n\n### v1.0.2\n - Improved style\n\n### v1.0.1\n - Fixed an issue where the driver was sending Rangefinder messages with invalid data\n\nThis is a docker implementation of a Waterlinked DVL A50 driver as a BlueOS Extension.\n\n## Install\n\nInstall it from [BlueOS extensions tab](https://docs.bluerobotics.com/ardusub-zola/software/onboard/BlueOS-1.1/extensions/).\n\nThe service will show in the \"Extension Manager\" section in BlueOS, where there are some configuration options.\n",
                "support": "https://github.com/bluerobotics/BlueOS-Water-Linked-DVL/issues",
                "requirements": "core >= 1.1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "9001/tcp": {}
                    },
                    "HostConfig": {
                        "Binds": [
                            "/root/.config:/root/.config"
                        ],
                        "PortBindings": {
                            "9001/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            },
            "v1.0.2": {
                "identifier": "a5416f70-61fe-5098-930b-6fce0d2c0bf4",
                "type": "other",
                "website": "https://github.com/bluerobotics/BlueOS-Water-Linked-DVL",
                "images": [
                    {
                        "expanded_size": 78844216,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:2f52eb554ba188b329ad06f5167927c54fa773cb33beb6f78a1d2bb3ab991395"
                    },
                    {
                        "expanded_size": 72588503,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:1e8607b8ea94b70337ada4b84941aa38fcccb06b0c630122d07c2dc66e64630d"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.2",
                "docs": null,
                "readme": "# BlueOS-Water-Linked-DVL\n\n## Changelog\n\n### v1.0.2\n - Improved style\n\n### v1.0.1\n - Fixed an issue where the driver was sending Rangefinder messages with invalid data\n\nThis is a docker implementation of a Waterlinked DVL A50 driver as a BlueOS Extension.\n\n## Install\n\nInstall it from [BlueOS extensions tab](https://docs.bluerobotics.com/ardusub-zola/software/onboard/BlueOS-1.1/extensions/).\n\nThe service will show in the \"Extension Manager\" section in BlueOS, where there are some configuration options.\n",
                "support": "https://github.com/bluerobotics/BlueOS-Water-Linked-DVL",
                "requirements": "core >  1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "NetworkMode": "host"
                }
            },
            "v1.0.1": {
                "identifier": "98ed5b74-52a3-57e1-a100-cbeb698c5498",
                "type": "other",
                "website": "https://github.com/bluerobotics/BlueOS-Water-Linked-DVL",
                "images": [
                    {
                        "expanded_size": 78944496,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:96cfe2f9ecd1cdece9cdc82f7ea24121c7a56beb4e02d502ecc6b71dca9a1cce"
                    },
                    {
                        "expanded_size": 72798434,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:65115990f649c932a39466fc846aaf671608b441c1e8e8448b8cd4496204d88d"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.1",
                "docs": null,
                "readme": "# BlueOS-Water-Linked-DVL\n\n## Changelog\n\n### v1.0.1\n - Fixed an issue where the driver was sending Rangefinder messages with invalid data\n\nThis is a docker implementation of a Waterlinked DVL-a50 driver for the new Blue Robotics BlueOS.\n\nTo set this up, ssh into the Raspberry Pi (or access via `red-pill` in [BlueOS Terminal](https://docs.bluerobotics.com/ardusub-zola/software/onboard/BlueOS-1.0/advanced-usage/#terminal)) and run\n\n`sudo docker run -d --net=host -v /root/.config/blueos:/root/.config --name=BlueOS-Water-Linked-DVL --restart=unless-stopped bluerobotics/blueos-water-linked-dvl:latest\n`\n\nThe service will show in the \"Available Services\" section in BlueOS, where there are some configuration options.\n",
                "support": "https://github.com/bluerobotics/BlueOS-Water-Linked-DVL",
                "requirements": "core >  1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "NetworkMode": "host"
                }
            },
            "v1.0.0": {
                "identifier": "a12a3bf4-23fa-54be-b7af-d4b1598c8246",
                "type": "other",
                "website": "https://github.com/bluerobotics/BlueOS-Water-Linked-DVL",
                "images": [
                    {
                        "expanded_size": 78926907,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:e3e67687861b5d8c4613e35fafe4f13498c9906e6553125b032f6f6ddf075944"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.0",
                "docs": null,
                "readme": "# BlueOS-Water-Linked-DVL\n\nThis is a docker implementation of a Waterlinked DVL-a50 driver for the new Blue Robotics BlueOS.\n\nTo set this up, ssh into the Raspberry Pi (or access via `red-pill` in [BlueOS Terminal](https://docs.bluerobotics.com/ardusub-zola/software/onboard/BlueOS-1.0/advanced-usage/#terminal)) and run\n\n`sudo docker run -d --net=host -v /root/.config/blueos:/root/.config --name=BlueOS-Water-Linked-DVL --restart=unless-stopped bluerobotics/blueos-water-linked-dvl:latest\n`\n\nThe service will show in the \"Available Services\" section in BlueOS, where there are some configuration options.\n",
                "support": "https://github.com/bluerobotics/BlueOS-Water-Linked-DVL",
                "requirements": "core >  1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "NetworkMode": "host"
                }
            }
        }
    },
    {
        "identifier": "williangalvani.usbip",
        "name": "USBIP",
        "website": "https://github.com/Williangalvani/blueos-usbip",
        "docker": "williangalvani/blueos-extension-usbip",
        "description": "USBIP extension for extending USB over IP",
        "extension_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/williangalvani/usbip/extension_logo.png",
        "company_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/williangalvani/company_logo.png",
        "versions": {
            "v1.0.3": {
                "identifier": "c9ab154d-70e1-5174-a91c-d8b0e84bcbc2",
                "type": "device-integration",
                "website": "https://github.com/Williangalvani/BlueOS-UsbIp",
                "images": [
                    {
                        "expanded_size": 46300711,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:77fa8d6dc7271ea52c9b220744212c7d2c501b44053c99cf57242f915abee571"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "communication"
                ],
                "extra_links": {},
                "tag": "v1.0.3",
                "docs": null,
                "readme": "# USB/IP extension\n\nThis exposes usb devices via IP, which can be used in another client device\n\n\n# Client\n\n## Linux:\n\n\n```\n# load modules\nsudo modprobe usbip-core\nsudo modprobe vhci-hcd\n# list devices\nsudo usbip list --remote blueos.local\n# connect to device with bus 1-1.3\nsudo usbip attach --remote blueos.local --busid 1-1.3\n\n```\n\n## Windows\n\nDownload the 3.6 dev release from https://github.com/cezanne/usbip-win and follow the \"Client\" instructions there.\nThe new \"ude\" driver seemed to work for me.\n\n\n# Changelog:\n\n - v1.0.2:\n     - updated to use commander instead of hard-coded ID to talk to host",
                "support": "https://github.com/Williangalvani/BlueOS-UsbIp",
                "requirements": "core >= 1.1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "NetworkMode": "host"
                }
            },
            "v1.0.2": {
                "identifier": "0ba7d41c-99ac-5b5b-a8a5-0571103fef2b",
                "type": "device-integration",
                "website": "https://github.com/Williangalvani/BlueOS-UsbIp",
                "images": [
                    {
                        "expanded_size": 46300676,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:71bd46130f38fea1c6d6c7d91104100c760a5f254689c4f329fa1731b136990d"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "communication"
                ],
                "extra_links": {},
                "tag": "v1.0.2",
                "docs": null,
                "readme": "# USB/IP extension\n\nThis exposes usb devices via IP, which can be used in another client device\n\n\n# Client\n\n## Linux:\n\n\n```\n# load modules\nsudo modprobe usbip-core\nsudo modprobe vhci-hcd\n# list devices\nsudo usbip list --remote blueos.local\n# connect to device with bus 1-1.3\nsudo usbip attach --remote blueos.local --busid 1-1.3\n\n```\n\n## Windows\n\nDownload the 3.6 dev release from https://github.com/cezanne/usbip-win and follow the \"Client\" instructions there.\nThe new \"ude\" driver seemed to work for me.\n\n\n# Changelog:\n\n - v1.0.2:\n     - updated to use commander instead of hard-coded ID to talk to host",
                "support": "https://github.com/Williangalvani/BlueOS-UsbIp",
                "requirements": "core >= 1.1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "NetworkMode": "host"
                }
            },
            "v1.0.1": {
                "identifier": "21940e28-c01a-5daa-836d-4d56fdbcf7d9",
                "type": "device-integration",
                "website": "https://github.com/Williangalvani/BlueOS-UsbIp",
                "images": [
                    {
                        "expanded_size": 60355857,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:6b4d81bb368a7899b106009a3d2a717144c471dde7dfaa22e61aa4512b987887"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "communication"
                ],
                "extra_links": {},
                "tag": "v1.0.1",
                "docs": null,
                "readme": "# USB/IP extension\n\nThis exposes usb devices via IP, which can be used in another client device\n\nTo use, first pull it in blueos:\n\n\n```\nred-pill\nsudo docker run -d --net=host --name=blueos-example1 --restart=unless-stopped williangalvani/blueos-extension-usbip:latest\n```\n\n# Client\n\n## Linux:\n\n\n```\n# load modules\nsudo modprobe usbip-core\nsudo modprobe vhci-hcd\n# list devices\nsudo usbip list --remote blueos.local\n# connect to device with bus 1-1.3\nsudo usbip attach --remote blueos.local --busid 1-1.3\n\n```\n\n## Windows\n\nDownload the 3.6 dev release from https://github.com/cezanne/usbip-win and follow the \"Client\" instructions there.\nThe new \"ude\" driver seemed to work for me.",
                "support": "https://github.com/Williangalvani/BlueOS-UsbIp",
                "requirements": "core >= 1.1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "NetworkMode": "host"
                }
            },
            "v1.0.0": {
                "identifier": "66cc7571-3976-551f-9ccc-0159c33fab96",
                "type": "other",
                "website": "https://github.com/Williangalvani/BlueOS-UsbIp",
                "images": [
                    {
                        "expanded_size": 60460083,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:2721824e101a3d6853d17b1a743020d7048eb55677c4243293366ec4930ff7fa"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.0",
                "docs": null,
                "readme": "# USB/IP extension\n\nThis exposes usb devices via IP, which can be used in another client device\n\n# Client\n\n## Linux:\n\n\n```\n# load modules\nsudo modprobe usbip-core\nsudo modprobe vhci-hcd\n# list devices\nsudo usbip list --remote blueos.local\n# connect to device with bus 1-1.3\nsudo usbip attach --remote blueos.local --busid 1-1.3\n\n```\n\n## Windows\n\nDownload the 3.6 dev release from https://github.com/cezanne/usbip-win and follow the \"Client\" instructions there.\nThe new \"ude\" driver seemed to work for me.",
                "support": "https://github.com/Williangalvani/BlueOS-UsbIp",
                "requirements": "core >  1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "NetworkMode": "host"
                }
            }
        }
    },
    {
        "identifier": "williangalvani.virtualhere",
        "name": "VirtualHere",
        "website": "https://github.com/Williangalvani/BlueOS-VirtualHere",
        "docker": "williangalvani/blueos-extension-virtualhere",
        "description": "Remotely access onboard USB devices over IP",
        "extension_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/williangalvani/virtualhere/extension_logo.png",
        "company_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/williangalvani/company_logo.png",
        "versions": {
            "v1.0.3": {
                "identifier": "166bd1cb-1e1b-56ff-a5f5-721e02b95994",
                "type": "other",
                "website": "https://github.com/Williangalvani/BlueOS-VirtualHere",
                "images": [
                    {
                        "expanded_size": 61972606,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:27c382df5571e9d2338b729a022ad7c902e58267e648231eacee78d7169cfe6b"
                    },
                    {
                        "expanded_size": 56520690,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:58add8e210182fa2c96607fb8192b2dfb3f853ebe18c088b9738a50163daf041"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "communication"
                ],
                "extra_links": {},
                "tag": "v1.0.3",
                "docs": null,
                "readme": "# BlueOS VirtualHere extension\n\nThis exposes usb devices via IP, which can be used in another client device\n\n# Client\n\nDownload a client from https://www.virtualhere.com/usb_client_software\n",
                "support": "https://github.com/Williangalvani/BlueOS-VirtualHere/issues",
                "requirements": "core >= 1.1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "NetworkMode": "host"
                    }
                }
            },
            "v1.0.2": {
                "identifier": "f11b999a-862a-5908-8c10-57fe46b9d864",
                "type": "other",
                "website": "https://github.com/Williangalvani/BlueOS-VirtualHere",
                "images": [
                    {
                        "expanded_size": 62383495,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:4006bc89ee6193e8f973c02858cc91c8482cab78704ea5307912f56058ab59ba"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.2",
                "docs": null,
                "readme": "# BlueOS VirtualHere extension\n\nThis exposes usb devices via IP, which can be used in another client device\n\n# Client\n\nDownload a client from https://www.virtualhere.com/usb_client_software\n",
                "support": "https://github.com/Williangalvani/BlueOS-VirtualHere/issues",
                "requirements": "core >= 1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "NetworkMode": "host"
                    }
                }
            },
            "v1.0.0": {
                "identifier": "4d7a08b8-ab08-54b2-8cfb-ae1a6f2acb7b",
                "type": "other",
                "website": "https://github.com/Williangalvani/BlueOS-VirtualHere",
                "images": [
                    {
                        "expanded_size": 62349790,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:b84df60bdd753d795c649f5ba2266a3394961da30a94f36a090aea5626ccda53"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.0",
                "docs": null,
                "readme": "# BlueOS VirtualHere extension\n\nThis exposes usb devices via IP, which can be used in another client device\n\nTo use, first install it in BlueOS:\n\n\n```\nred-pill\nsudo docker run -d --net=host --privileged --name=blueos-virtualhere --restart=unless-stopped williangalvani/blueos-extension-virtualhere:latest\n```\n\n# Client\n\nDownload a client from https://www.virtualhere.com/usb_client_software",
                "support": "https://github.com/Williangalvani/BlueOS-VirtualHere/issues",
                "requirements": "core >= 1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true
                    }
                }
            }
        }
    },
    {
        "identifier": "williangalvani.oakd",
        "name": "Oak-D Video Streams",
        "website": "https://github.com/Williangalvani/Oakd-extension",
        "docker": "williangalvani/oakd-extension",
        "description": "Exposes Oak-D streams into cockpit",
        "extension_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/williangalvani/oakd/extension_logo.png",
        "company_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/williangalvani/company_logo.png",
        "versions": {
            "v1.0.1": {
                "identifier": "63e34a69-3b69-5327-8254-d4ff289d23db",
                "type": "device-integration",
                "website": "https://github.com/Williangalvani/Oakd-extension/",
                "images": [
                    {
                        "expanded_size": 1150339197,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:17cb604a2ad65de827543a007a6ad0544f1386fa66468216a12c145b334e5984"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.1",
                "docs": null,
                "readme": "Could not get readme https://raw.githubusercontent.com/Williangalvani/Oakd-extension/v1.0.1/Readme.md: status: 404: 404: Not Found",
                "support": "https://github.com/Williangalvani/Oakd-extension/",
                "requirements": "core >= 1.1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "NetworkMode": "host",
                        "Binds": [
                            "/dev/bus/usb:/dev/bus/usb"
                        ],
                        "DeviceCgroupRules": [
                            "c 189:* rmw"
                        ]
                    }
                }
            },
            "v1.0.1-heta.1": {
                "identifier": "4d8e6434-af76-53c3-b91c-111aff57d0da",
                "type": "device-integration",
                "website": "https://github.com/Williangalvani/Oakd-extension/",
                "images": [
                    {
                        "expanded_size": 1150339016,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:55eb2f8e8d25a693dc2c53d52b082a29b5c6bf08c9d64d22a5a5c5ce8c93a49e"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.1-heta.1",
                "docs": null,
                "readme": "Could not get readme https://raw.githubusercontent.com/Williangalvani/Oakd-extension/v1.0.1-heta.1/Readme.md: status: 404: 404: Not Found",
                "support": "https://github.com/Williangalvani/Oakd-extension/",
                "requirements": "core >= 1.1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "NetworkMode": "host",
                        "Binds": [
                            "/dev/bus/usb:/dev/bus/usb"
                        ],
                        "DeviceCgroupRules": [
                            "c 189:* rmw"
                        ]
                    }
                }
            },
            "v1.0.0": {
                "identifier": "267435ea-f9fd-510b-b863-250a622957f2",
                "type": "device-integration",
                "website": "https://github.com/Williangalvani/Oakd-extension/",
                "images": [
                    {
                        "expanded_size": 1150339194,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:6da815487395a969ee4cd142ab7c55bf7b201032b433ae1e551af7380b75a042"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.0",
                "docs": null,
                "readme": "This extension exposes the Stereo Depth Disparity and RGB video from Oak-D cameras into RTSP streams that can be displayed in Cockpit.",
                "support": "https://github.com/Williangalvani/Oakd-extension/",
                "requirements": "core >= 1.1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "NetworkMode": "host",
                        "Binds": [
                            "/dev/bus/usb:/dev/bus/usb"
                        ],
                        "DeviceCgroupRules": [
                            "c 189:* rmw"
                        ]
                    }
                }
            }
        }
    },
    {
        "identifier": "williangalvani.example2",
        "name": "Example 2",
        "website": "https://github.com/Williangalvani/BlueOS-examples/",
        "docker": "williangalvani/blueos-example2",
        "description": "Static HTML plus MAVLink data",
        "extension_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/williangalvani/example2/extension_logo.png",
        "company_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/williangalvani/company_logo.png",
        "versions": {
            "v1.0.1": {
                "identifier": "39888870-c652-52f0-9ead-0640b21526bc",
                "type": "example",
                "website": "https://github.com/Williangalvani/BlueOS-examples/",
                "images": [
                    {
                        "expanded_size": 46802665,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:49131f6972848dea860471a4215687166319a4b105422aa1dd6b75a74610d588"
                    },
                    {
                        "expanded_size": 41255976,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:0b5b5c4341d46ae89398405d5eef61fed9ed6f86923451ff0135c855f53a247a"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.1",
                "docs": null,
                "readme": "# Static Webpage extension\n\nThis uses python to serve a basic static HTML page as an extension. This example includes MAVLink2Rest communication via http\n\nto build:\n\nEnable qemu static support with a docker\n\n```\ndocker buildx create --name multiarch --driver docker-container --use\ndocker run --rm --privileged multiarch/qemu-user-static --reset -p yes\n```\n\nThen build it:\n\n`docker buildx build --platform linux/amd64,linux/arm/v7 . -t YOURDOCKERHUBUSER/YOURDOCKERHUBREPO:latest --output type=registry\n`",
                "support": "https://github.com/Williangalvani/BlueOS-examples/",
                "requirements": "core >= 1.1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "80/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "80/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            },
            "v1.0.0": {
                "identifier": "76dbd22b-c7a4-566e-9342-5871c558bd88",
                "type": "other",
                "website": "https://github.com/Williangalvani/BlueOS-examples/",
                "images": [
                    {
                        "expanded_size": 47259138,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:330ef2defbb59580f2c5324d03c968b7f43e4073c3a3cc3e4c9620d5ce9d4781"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.0",
                "docs": null,
                "readme": "# Static Webpage extension\n\nThis uses python to serve a basic static HTML page as an extension. This example includes MAVLink2Rest communication via http\n\nto build:\n\nEnable qemu static support with a docker\n\n```\ndocker buildx create --name multiarch --driver docker-container --use\ndocker run --rm --privileged multiarch/qemu-user-static --reset -p yes\n```\n\nThen build it:\n\n`docker buildx build --platform linux/amd64,linux/arm/v7 . -t YOURDOCKERHUBUSER/YOURDOCKERHUBREPO:latest --output type=registry\n`",
                "support": "https://github.com/Williangalvani/BlueOS-examples/",
                "requirements": "core >= 1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "80/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "80/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    {
        "identifier": "williangalvani.example5",
        "name": "Example 5",
        "website": "https://github.com/Williangalvani/BlueOS-examples/",
        "docker": "williangalvani/blueos-example5",
        "description": "GPIO PWM Control",
        "extension_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/williangalvani/example5/extension_logo.png",
        "company_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/williangalvani/company_logo.png",
        "versions": {
            "v1.0.1": {
                "identifier": "aee11d25-295e-5fc7-8d75-c8cffa35172d",
                "type": "example",
                "website": "https://github.com/Williangalvani/BlueOS-examples/",
                "images": [
                    {
                        "expanded_size": 80249985,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:f04b7ccea49448746dd544f11e17947a153673cf5342d6c74d8f6dbbf9ceea0d"
                    },
                    {
                        "expanded_size": 70567870,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:e87fa5aae685c797296502f1623cfd032ea3d6c9f7d8e241a382537e0fa0ca85"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "interaction"
                ],
                "extra_links": {},
                "tag": "v1.0.1",
                "docs": null,
                "readme": "# Gpio Control Example\n\nThis uses python to serve a static HTML page using Vue and Vuetify controlling a gpio using a python backend\nto build:\n\nEnable qemu static support with a docker\n\n```\ndocker buildx create --name multiarch --driver docker-container --use\ndocker run --rm --privileged multiarch/qemu-user-static --reset -p yes\n```\n\nThen build it:\n\n`docker buildx build --platform linux/amd64,linux/arm/v7 . -t YOURDOCKERHUBUSER/YOURDOCKERHUBREPO:latest --output type=registry\n`\n\nThen pull it in blueos:\n\n\n```\nred-pill\nsudo docker run -d --net=host --name=blueos-example4 --restart=unless-stopped YOURDOCKERHUBUSER/YOURDOCKERHUBREPO:latest\n```",
                "support": "https://github.com/Williangalvani/BlueOS-examples/",
                "requirements": "core >= 1.1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "80/tcp": {}
                    },
                    "HostConfig": {
                        "Privileged": true,
                        "Binds": [
                            "/root/.config:/root/.config"
                        ],
                        "PortBindings": {
                            "80/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            },
            "v1.0.0": {
                "identifier": "1f032679-8e6f-5837-9743-39ff07613067",
                "type": "other",
                "website": "https://github.com/Williangalvani/BlueOS-examples/",
                "images": [
                    {
                        "expanded_size": 66852214,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:71889390624dbe62a6f63094ca917da18182d55235ea7804c72209b995587970"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.0",
                "docs": null,
                "readme": "# Gpio Control Example\n\nThis uses python to serve a static HTML page using Vue and Vuetify controlling a gpio using a python backend\nto build:\n\nEnable qemu static support with a docker\n\n```\ndocker buildx create --name multiarch --driver docker-container --use\ndocker run --rm --privileged multiarch/qemu-user-static --reset -p yes\n```\n\nThen build it:\n\n`docker buildx build --platform linux/amd64,linux/arm/v7 . -t YOURDOCKERHUBUSER/YOURDOCKERHUBREPO:latest --output type=registry\n`\n\nThen pull it in blueos:\n\n\n```\nred-pill\nsudo docker run -d --net=host --name=blueos-example4 --restart=unless-stopped YOURDOCKERHUBUSER/YOURDOCKERHUBREPO:latest\n```",
                "support": "https://github.com/Williangalvani/BlueOS-examples/",
                "requirements": "core >= 1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "80/tcp": {}
                    },
                    "HostConfig": {
                        "Privileged": true,
                        "Binds": [
                            "/root/.config:/root/.config"
                        ],
                        "PortBindings": {
                            "80/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    {
        "identifier": "williangalvani.zerotier",
        "name": "ZeroTier",
        "website": "https://github.com/Williangalvani/ZeroTierOne",
        "docker": "williangalvani/zerotier",
        "description": "Join a virtual network to operate your vehicle from anywhere",
        "extension_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/williangalvani/zerotier/extension_logo.png",
        "company_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/williangalvani/company_logo.png",
        "versions": {
            "v1.14.0": {
                "identifier": "1c7ef7f2-05d3-5efb-815f-de4c075ca8d9",
                "type": "other",
                "website": "https://github.com/Williangalvani/zerotierone",
                "images": [
                    {
                        "expanded_size": 67417026,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:831682262dd736b8844e59d9bb49e479755c6cc0b27b71e4058c91033b7d2a40"
                    },
                    {
                        "expanded_size": 83870955,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:d5da9ed246a39fc0f849107530931bd87ae1156b2da776855483bbb092010e9e"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "communication"
                ],
                "extra_links": {},
                "tag": "v1.14.0",
                "docs": null,
                "readme": ">**NOTE:** This is a [BlueOS Extension](https://blueos.cloud/docs/blueos/1.1/extensions/) for using the [ZeroTier](https://www.zerotier.com/) service on a BlueOS device. It sets up a VPN to access your device from anywhere with an internet connection.\n## Initial Setup\n\n1. Install [the ZeroTier extension](https://docs.bluerobotics.com/BlueOS-Extensions-Repository/#:~:text=ZeroTier,Maintainer) on your vehicle\n1. [Download ZeroTier](https://www.zerotier.com/download/) on the device(s) you want to connect with\n1. [Log In](https://my.zerotier.com/login) to ZeroTier online\n    - create an account if you haven't used ZeroTier before)\n1. Create a new network and copy the generated network ID\n1. Join the network (using the ID) from the BlueOS ZeroTier Extension page, as well as through the ZeroTier interface on your device(s)\n1. If using a private network, return to the online ZeroTier interface, scroll down to the \"Members\" section, and allow each device access to the network by checking the \"Auth?\" checkbox beside its listing\n    - For ease of future management, it may help to give meaningful names and/or descriptions to the devices in the table\n1. You should now be able to access the BlueOS web interface through the ZeroTier connection\n    - You can use the **vehicle**'s mDNS address (e.g. http://blueos.local, by default), or the **vehicle**'s \"Managed IP\" shown in ZeroTier's online interface (in the \"Members\" section)\n    - Connecting through ZeroTier requires both ends of the connection to be on the same ZeroTier network and connected to the internet\n1. Configure the desired endpoints (for MAVLink telemetry, video streams, serial, etc) to point to the intended recipient\n    - Setting up a video stream requires setting up a stream endpoint for it in the [Video Streams](https://blueos.cloud/docs/blueos/1.1/advanced-usage/#video-streams) page\n        - Creating a new stream endpoint while connected to BlueOS through the ZeroTier connection will automatically use the connected **device**'s IP address\n        - You can also get the relevant **device** IP address(es) through the ZeroTier online interface (in the \"Managed IPs\" column)\n        - BlueOS video streams can provide multiple endpoints of the same type, to send to multiple devices\n            - You can edit a stream to add more endpoints\n    - Vehicle telemetry+control through QGroundControl is generally handled via a UDP Client link set up in BlueOS's [MAVLink Endpoints](https://blueos.cloud/docs/blueos/1.1/advanced-usage/#mavlink-endpoints) page\n        - Creating a new UDP Client endpoint while connected through the ZeroTier connection will automatically use the connected **device**'s IP address\n        - You can also get the relevant **device** IP address through the ZeroTier online interface (in the \"Managed IPs\" column)\n    - It is technically also possible to set up a MAVLink connection using BlueOS's GCS Server Link, although it may be less robust\n        - Doing this requires adding a \"Comm Link\" in QGroundControl's Application Settings (instead of creating a new endpoint in BlueOS)\n            - you can add the server as the **vehicle**'s mDNS address (e.g. `blueos.local`) or the **vehicle**'s IP address, and leave the port as `14550`\n        - Make sure the GCS Server Link is enabled in BlueOS\n\n## General Usage\n\nOnce the network and endpoints have been configured it should be possible to reconnect at will, whenever the vehicle and a device are both connected to the internet, and connected to a ZeroTier network they're both authorised on.\n\nIf a device leaves a ZeroTier network (or is not connected to the internet) then it will not be accessible to the rest of the network. ZeroTier's online manager can be used to de-authorise devices and/or remove them from the network entirely.\n\n## Troubleshooting\n\n- If the ZeroTier Status is showing as `ACCESS_DENIED`, you're connected to a privately configured ZeroTier network and the network owner (likely yourself) needs to authorise your device through the \"Members\" section of ZeroTier's online interface for that network\n- If the connection is not working it can help to check the \"Last Seen\" column of the \"Members\" section of ZeroTier's online interface, to determine whether one or multiple of your devices is not currently connected to the ZeroTier network (it may be having internet connectivity issues, or may just need to connect to the network through its ZeroTier interface)\n    - If you can't find your device's ZeroTier interface, it may be an icon in your taskbar / menubar\n- Determining which device is which in ZeroTier's online interface requires knowing which order they attempted to join the network, or having access to the devices so you can identify them by disconnecting them from the network (or the internet) and seeing which one changes in the \"Last Seen\" column\n- If the connection is working but some of the endpoints aren't, make sure the endpoints are configured to use the correct IP address\n    - Something on the vehicle sending/connecting to a device (e.g. video, GCS MAVLink UDP client link for telemetry, etc) needs to be directed towards the **device**'s IP address\n    - Using a device to connect to the vehicle (e.g. to access the BlueOS web interface, or connect to a GCS server link for telemetry) needs to use the **vehicle**'s IP or mDNS address",
                "support": "https://github.com/Williangalvani/zerotierone/issues",
                "requirements": "core >= 1.1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "NetworkMode": "host",
                        "CapAdd": [
                            "SYS_ADMIN",
                            "NET_ADMIN"
                        ],
                        "Binds": [
                            "/usr/blueos/extensions/zerotier:/var/lib/zerotier-one",
                            "/var/lib/zerotier-one:/old-settings"
                        ],
                        "Devices": [
                            {
                                "PathOnHost": "/dev/net/tun",
                                "PathInContainer": "/dev/net/tun",
                                "CgroupPermissions": "rwm"
                            }
                        ]
                    }
                }
            },
            "v1.12.3": {
                "identifier": "d8da95f8-29ff-5b64-a4ac-3e4425d890f4",
                "type": "other",
                "website": "https://github.com/Williangalvani/zerotierone",
                "images": [
                    {
                        "expanded_size": 260334935,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:714ca73d30b033b2eb4d3f70e77cf86fa5871a4cddf5314ed435dc4b4b860ff7"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "communication"
                ],
                "extra_links": {},
                "tag": "v1.12.3",
                "docs": null,
                "readme": ">**NOTE:** This is a [BlueOS Extension](https://blueos.cloud/docs/blueos/1.1/extensions/) for using the [ZeroTier](https://www.zerotier.com/) service on a BlueOS device. It sets up a VPN to access your device from anywhere with an internet connection.\n## Initial Setup\n\n1. Install [the ZeroTier extension](https://docs.bluerobotics.com/BlueOS-Extensions-Repository/#:~:text=ZeroTier,Maintainer) on your vehicle\n1. [Download ZeroTier](https://www.zerotier.com/download/) on the device(s) you want to connect with\n1. [Log In](https://my.zerotier.com/login) to ZeroTier online\n    - create an account if you haven't used ZeroTier before)\n1. Create a new network and copy the generated network ID\n1. Join the network (using the ID) from the BlueOS ZeroTier Extension page, as well as through the ZeroTier interface on your device(s)\n1. If using a private network, return to the online ZeroTier interface, scroll down to the \"Members\" section, and allow each device access to the network by checking the \"Auth?\" checkbox beside its listing\n    - For ease of future management, it may help to give meaningful names and/or descriptions to the devices in the table\n1. You should now be able to access the BlueOS web interface through the ZeroTier connection\n    - You can use the **vehicle**'s mDNS address (e.g. http://blueos.local, by default), or the **vehicle**'s \"Managed IP\" shown in ZeroTier's online interface (in the \"Members\" section)\n    - Connecting through ZeroTier requires both ends of the connection to be on the same ZeroTier network and connected to the internet\n1. Configure the desired endpoints (for MAVLink telemetry, video streams, serial, etc) to point to the intended recipient\n    - Setting up a video stream requires setting up a stream endpoint for it in the [Video Streams](https://blueos.cloud/docs/blueos/1.1/advanced-usage/#video-streams) page\n        - Creating a new stream endpoint while connected to BlueOS through the ZeroTier connection will automatically use the connected **device**'s IP address\n        - You can also get the relevant **device** IP address(es) through the ZeroTier online interface (in the \"Managed IPs\" column)\n        - BlueOS video streams can provide multiple endpoints of the same type, to send to multiple devices\n            - You can edit a stream to add more endpoints\n    - Vehicle telemetry+control through QGroundControl is generally handled via a UDP Client link set up in BlueOS's [MAVLink Endpoints](https://blueos.cloud/docs/blueos/1.1/advanced-usage/#mavlink-endpoints) page\n        - Creating a new UDP Client endpoint while connected through the ZeroTier connection will automatically use the connected **device**'s IP address\n        - You can also get the relevant **device** IP address through the ZeroTier online interface (in the \"Managed IPs\" column)\n    - It is technically also possible to set up a MAVLink connection using BlueOS's GCS Server Link, although it may be less robust\n        - Doing this requires adding a \"Comm Link\" in QGroundControl's Application Settings (instead of creating a new endpoint in BlueOS)\n            - you can add the server as the **vehicle**'s mDNS address (e.g. `blueos.local`) or the **vehicle**'s IP address, and leave the port as `14550`\n        - Make sure the GCS Server Link is enabled in BlueOS\n\n## General Usage\n\nOnce the network and endpoints have been configured it should be possible to reconnect at will, whenever the vehicle and a device are both connected to the internet, and connected to a ZeroTier network they're both authorised on.\n\nIf a device leaves a ZeroTier network (or is not connected to the internet) then it will not be accessible to the rest of the network. ZeroTier's online manager can be used to de-authorise devices and/or remove them from the network entirely.\n\n## Troubleshooting\n\n- If the ZeroTier Status is showing as `ACCESS_DENIED`, you're connected to a privately configured ZeroTier network and the network owner (likely yourself) needs to authorise your device through the \"Members\" section of ZeroTier's online interface for that network\n- If the connection is not working it can help to check the \"Last Seen\" column of the \"Members\" section of ZeroTier's online interface, to determine whether one or multiple of your devices is not currently connected to the ZeroTier network (it may be having internet connectivity issues, or may just need to connect to the network through its ZeroTier interface)\n    - If you can't find your device's ZeroTier interface, it may be an icon in your taskbar / menubar\n- Determining which device is which in ZeroTier's online interface requires knowing which order they attempted to join the network, or having access to the devices so you can identify them by disconnecting them from the network (or the internet) and seeing which one changes in the \"Last Seen\" column\n- If the connection is working but some of the endpoints aren't, make sure the endpoints are configured to use the correct IP address\n    - Something on the vehicle sending/connecting to a device (e.g. video, GCS MAVLink UDP client link for telemetry, etc) needs to be directed towards the **device**'s IP address\n    - Using a device to connect to the vehicle (e.g. to access the BlueOS web interface, or connect to a GCS server link for telemetry) needs to use the **vehicle**'s IP or mDNS address",
                "support": "https://github.com/Williangalvani/zerotierone/issues",
                "requirements": "core >= 1.1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "NetworkMode": "host",
                        "CapAdd": [
                            "SYS_ADMIN",
                            "NET_ADMIN"
                        ],
                        "Binds": [
                            "/usr/blueos/extensions/zerotier:/var/lib/zerotier-one",
                            "/var/lib/zerotier-one:/old-settings"
                        ],
                        "Devices": [
                            {
                                "PathOnHost": "/dev/net/tun",
                                "PathInContainer": "/dev/net/tun",
                                "CgroupPermissions": "rwm"
                            }
                        ]
                    }
                }
            },
            "v1.12.1": {
                "identifier": "2c16f342-5e57-580d-b91c-595299c4f765",
                "type": "other",
                "website": "https://github.com/Williangalvani/zerotierone",
                "images": [
                    {
                        "expanded_size": 246398941,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:473153de2deff0d6ebe51df9a6d86dd1b382eecf78ba8f5ecad052c12d3ad94d"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "communication"
                ],
                "extra_links": {},
                "tag": "v1.12.1",
                "docs": null,
                "readme": "This is a ZeroTier extension. It sets up a VPN to access your device from anywhere with an internet connection.\nFor more information on ZeroTier, check [ZeroTier](https://www.zerotier.com/).",
                "support": "https://github.com/Williangalvani/zerotierone/issues",
                "requirements": "core >= 1.1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "NetworkMode": "host",
                        "CapAdd": [
                            "SYS_ADMIN",
                            "NET_ADMIN"
                        ],
                        "Binds": [
                            "/var/lib/zerotier-one:/var/lib/zerotier-one"
                        ],
                        "Devices": [
                            {
                                "PathOnHost": "/dev/net/tun",
                                "PathInContainer": "/dev/net/tun",
                                "CgroupPermissions": "rwm"
                            }
                        ]
                    }
                }
            },
            "v1.0.1": {
                "identifier": "50fceca3-00cf-550d-a4b3-6fc682caefab",
                "type": "other",
                "website": "https://github.com/Williangalvani/zerotierone",
                "images": [
                    {
                        "expanded_size": 169429191,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:1172a08bfae4bc3fb54589d1b6abc7237a05b1a09c8a8e4bd87d2ba424e424be"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "communication"
                ],
                "extra_links": {},
                "tag": "v1.0.1",
                "docs": null,
                "readme": "This is a ZeroTier extension. It sets up a VPN to access your device from anywhere with an internet connection.\nFor more information on ZeroTier, check [ZeroTier](https://www.zerotier.com/).",
                "support": "https://github.com/Williangalvani/zerotierone/issues",
                "requirements": "core >= 1.1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "NetworkMode": "host",
                        "CapAdd": [
                            "SYS_ADMIN",
                            "NET_ADMIN"
                        ],
                        "Binds": [
                            "/var/lib/zerotier-one:/var/lib/zerotier-one"
                        ],
                        "Devices": [
                            {
                                "PathOnHost": "/dev/net/tun",
                                "PathInContainer": "/dev/net/tun",
                                "CgroupPermissions": "rwm"
                            }
                        ]
                    }
                }
            },
            "v1.0.0": {
                "identifier": "a55f32d8-739a-50b3-b8eb-e6e648c55554",
                "type": "other",
                "website": "https://github.com/williangalvani/zerotierone",
                "images": [
                    {
                        "expanded_size": 169297643,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:da7a45553d91224582cfd56ead75ecdfc259e3ced1cb1c830bb044cdcc344c3c"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.0",
                "docs": null,
                "readme": "This is a ZeroTier extension. It sets up a VPN to access your device from anywhere with an internet connection.\nFor more information on ZeroTier, check [ZeroTier](https://www.zerotier.com/).",
                "support": "https://github.com/williangalvani/zerotierone",
                "requirements": "core >= 1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "NetworkMode": "host",
                        "CapAdd": [
                            "SYS_ADMIN",
                            "NET_ADMIN"
                        ],
                        "Binds": [
                            "/var/lib/zerotier-one:/var/lib/zerotier-one"
                        ],
                        "Devices": [
                            {
                                "PathOnHost": "/dev/net/tun",
                                "PathInContainer": "/dev/net/tun",
                                "CgroupPermissions": "rwm"
                            }
                        ]
                    }
                }
            }
        }
    },
    {
        "identifier": "williangalvani.example1",
        "name": "Example 1",
        "website": "https://github.com/Williangalvani/BlueOS-examples/",
        "docker": "williangalvani/blueos-example1",
        "description": "Hello World",
        "extension_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/williangalvani/example1/extension_logo.png",
        "company_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/williangalvani/company_logo.png",
        "versions": {
            "v1.0.1": {
                "identifier": "bf421443-99eb-57ac-8de4-190157c0c680",
                "type": "example",
                "website": "https://github.com/Williangalvani/BlueOS-examples/",
                "images": [
                    {
                        "expanded_size": 46802192,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:34d8e4576adb26c8db7a338b595cf01857da21c3a67f14796f0e503b4f0edfbd"
                    },
                    {
                        "expanded_size": 41255503,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:268ee547e87fc7b4c8c6dbd360a1e8a1c10228164e2458d9220b6a06155a8951"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.1",
                "docs": null,
                "readme": "# Static Webpage extension\n\nThis uses python to serve a basic static HTML page as an extension.\n\nto build:\n\nEnable qemu static support with a docker\n\n```\ndocker buildx create --name multiarch --driver docker-container --use\ndocker run --rm --privileged multiarch/qemu-user-static --reset -p yes\n```\n\nThen build it:\n\n`docker buildx build --platform linux/amd64,linux/arm/v7 . -t YOURDOCKERHUBUSER/YOURDOCKERHUBREPO:latest --output type=registry\n`",
                "support": "https://github.com/Williangalvani/BlueOS-examples/",
                "requirements": "core >= 1.1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "80/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "80/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            },
            "v1.0.0": {
                "identifier": "f01e3e89-4f93-5c96-8b6a-5526699bebb1",
                "type": "other",
                "website": "https://github.com/Williangalvani/BlueOS-examples/",
                "images": [
                    {
                        "expanded_size": 47258668,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:97920e5f8f44d815b8b6f6f2a662e1721e902b43005dd91464c08c56b8e8c66b"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.0",
                "docs": null,
                "readme": "# Static Webpage extension\n\nThis uses python to serve a basic static HTML page as an extension.\n\nto build:\n\nEnable qemu static support with a docker\n\n```\ndocker buildx create --name multiarch --driver docker-container --use\ndocker run --rm --privileged multiarch/qemu-user-static --reset -p yes\n```\n\nThen build it:\n\n`docker buildx build --platform linux/amd64,linux/arm/v7 . -t YOURDOCKERHUBUSER/YOURDOCKERHUBREPO:latest --output type=registry\n`",
                "support": "https://github.com/Williangalvani/BlueOS-examples/",
                "requirements": "core >  1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "80/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "80/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    {
        "identifier": "williangalvani.network-scanner",
        "name": "Network Scanner",
        "website": "https://github.com/Williangalvani/BlueOS-extension-network-scanner",
        "docker": "williangalvani/blueos-network-scanner",
        "description": "Find other devices at your BlueOS network",
        "extension_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/williangalvani/network-scanner/extension_logo.png",
        "company_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/williangalvani/company_logo.png",
        "versions": {
            "v1.0.0": {
                "identifier": "9784d249-52a2-57f1-81be-488a862daec0",
                "type": "tool",
                "website": "https://github.com/Williangalvani/BlueOS-extension-network-scanner/",
                "images": [
                    {
                        "expanded_size": 167206981,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:0daea257fead5fe6622ac888910e082b8e9ac4b1263907d128db8d8926753f5d"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.0",
                "docs": null,
                "readme": "# BlueOS Network SCanner\n\nThis allows scanning each individual logical interface in the vehicle to find connected devices",
                "support": "https://github.com/Williangalvani/BlueOS-extension-network-scanner/",
                "requirements": "core >= 1.1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "NetworkMode": "host",
                    "HostConfig": {
                        "NetworkMode": "host"
                    }
                }
            }
        }
    },
    {
        "identifier": "williangalvani.blueos-proxy",
        "name": "BlueOS Proxy",
        "website": "https://github.com/Williangalvani/Blueos-Proxy-Extension",
        "docker": "williangalvani/blueos-extension-proxy",
        "description": "BlueOS Proxy",
        "extension_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/williangalvani/blueos-proxy/extension_logo.png",
        "company_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/williangalvani/company_logo.png",
        "versions": {
            "v1.0.0": {
                "identifier": "ecdb7a22-1823-574b-9165-0fc25d948f3b",
                "type": "example",
                "website": "https://github.com/Williangalvani/Blueos-Proxy-Extension",
                "images": [
                    {
                        "expanded_size": 80488310,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:2390afb49552d47ccffea8b715c7cdaa3a440daa7e544ab661b8c8483774f550"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.0",
                "docs": null,
                "readme": "# Blueos Proxy Extension\n\nThis allows you to browse the ROV network as if you were in there.\nIt is useful for accessing and configuring routers and other local devices that may not be reachable from the GCS computer.",
                "support": "https://github.com/Williangalvani/Blueos-Proxy-Extension",
                "requirements": "core >= 1.1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {},
                    "HostConfig": {
                        "Binds": [
                            "/usr/blueos/userdata/blueos-proxy/:/usr/blueos/userdata/blueos-proxy/"
                        ],
                        "NetworkMode": "host"
                    }
                }
            },
            "v0.0.1": {
                "identifier": "0f219efe-14c3-5232-95d5-529d5396df1c",
                "type": "example",
                "website": "https://github.com/Williangalvani/BlueOS-examples/",
                "images": [
                    {
                        "expanded_size": 80488310,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:5813a9a11a447009c7e3a235b2fc263e8f283d136986f5b5a091e4f9b62d2fd4"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v0.0.1",
                "docs": null,
                "readme": "Could not get readme https://raw.githubusercontent.com/Williangalvani/BlueOS-examples/v0.0.1/example4-vue-backend/Readme.md: status: 404: 404: Not Found",
                "support": "https://github.com/Williangalvani/BlueOS-examples/",
                "requirements": "core >= 1.1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {},
                    "HostConfig": {
                        "Binds": [
                            "/usr/blueos/userdata/blueos-proxy/:/usr/blueos/userdata/blueos-proxy/"
                        ],
                        "NetworkMode": "host"
                    }
                }
            }
        }
    },
    {
        "identifier": "williangalvani.example3",
        "name": "Example 3",
        "website": "https://github.com/Williangalvani/BlueOS-examples/",
        "docker": "williangalvani/blueos-example3",
        "description": "Basic Vuetify example",
        "extension_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/williangalvani/example3/extension_logo.png",
        "company_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/williangalvani/company_logo.png",
        "versions": {
            "v1.0.1": {
                "identifier": "57e56b68-d5bf-563e-bf9b-faf46092a91d",
                "type": "example",
                "website": "https://github.com/Williangalvani/BlueOS-examples/",
                "images": [
                    {
                        "expanded_size": 48803918,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:6fb2d75b10ba570f679fe19d5352d6bc86ec3ddcf81d44ab62e98e48fd68fc17"
                    },
                    {
                        "expanded_size": 43257229,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:2ea73258ad7653091c56983f2b3484d3239ac1a13009cb5f8f337ba509162b29"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.1",
                "docs": null,
                "readme": "# Static Webpage extension\n\nThis uses python to serve a static HTML page using Vue and Vuetify as an extension.\n\nto build:\n\nEnable qemu static support with a docker\n\n```\ndocker buildx create --name multiarch --driver docker-container --use\ndocker run --rm --privileged multiarch/qemu-user-static --reset -p yes\n```\n\nThen build it:\n\n`docker buildx build --platform linux/amd64,linux/arm/v7 . -t YOURDOCKERHUBUSER/YOURDOCKERHUBREPO:latest --output type=registry\n`",
                "support": "https://github.com/Williangalvani/BlueOS-examples/",
                "requirements": "core >= 1.1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "80/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "80/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            },
            "v1.0.0": {
                "identifier": "e27b2b4c-10f0-5277-9045-0f1482e0a2bc",
                "type": "other",
                "website": "https://github.com/Williangalvani/BlueOS-examples/",
                "images": [
                    {
                        "expanded_size": 49260395,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:0d15d91d5b3612b3f6c1feda490b605ca7ef8ad16cb4dfb622eb12581d8d4b72"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.0",
                "docs": null,
                "readme": "# Static Webpage extension\n\nThis uses python to serve a static HTML page using Vue and Vuetify as an extension.\n\nto build:\n\nEnable qemu static support with a docker\n\n```\ndocker buildx create --name multiarch --driver docker-container --use\ndocker run --rm --privileged multiarch/qemu-user-static --reset -p yes\n```\n\nThen build it:\n\n`docker buildx build --platform linux/amd64,linux/arm/v7 . -t YOURDOCKERHUBUSER/YOURDOCKERHUBREPO:latest --output type=registry\n`",
                "support": "https://github.com/Williangalvani/BlueOS-examples/",
                "requirements": "core >= 1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "80/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "80/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    {
        "identifier": "williangalvani.example4",
        "name": "Example 4",
        "website": "https://github.com/Williangalvani/BlueOS-examples/",
        "docker": "williangalvani/blueos-example4",
        "description": "Vuetify + Persistent backend",
        "extension_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/williangalvani/example4/extension_logo.png",
        "company_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/williangalvani/company_logo.png",
        "versions": {
            "v1.0.1": {
                "identifier": "8971d6d2-1339-51d2-b015-bbf05e4f3df9",
                "type": "example",
                "website": "https://github.com/Williangalvani/BlueOS-examples/",
                "images": [
                    {
                        "expanded_size": 53713690,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:bec0e1bddc646ba1c477fd5767b29302aaff8d38057287949eac54d4815c7c3e"
                    },
                    {
                        "expanded_size": 45092996,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:361210e8893ca847ed186885daf3cf6f06c6a455182e7bb90b8622dbe7945c91"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.1",
                "docs": null,
                "readme": "# Static Webpage extension\n\nThis uses python to serve a static HTML page using Vue and Vuetify as an extension. The static page in this example talks to a simple python backend.\n\nto build:\n\nEnable qemu static support with a docker\n\n```\ndocker buildx create --name multiarch --driver docker-container --use\ndocker run --rm --privileged multiarch/qemu-user-static --reset -p yes\n```\n\nThen build it:\n\n`docker buildx build --platform linux/amd64,linux/arm/v7 . -t YOURDOCKERHUBUSER/YOURDOCKERHUBREPO:latest --output type=registry\n`",
                "support": "https://github.com/Williangalvani/BlueOS-examples/",
                "requirements": "core >= 1.1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "80/tcp": {}
                    },
                    "HostConfig": {
                        "Binds": [
                            "/root/.config:/root/.config"
                        ],
                        "PortBindings": {
                            "80/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            },
            "v1.0.0": {
                "identifier": "f9b3fffd-adc2-5d3a-aa12-3c4bdc3220f4",
                "type": "other",
                "website": "https://github.com/Williangalvani/BlueOS-examples/",
                "images": [
                    {
                        "expanded_size": 51091856,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:d6515e5ff51293fd362e88bec27dd55b0451dea1bf541d263f15faa8410a0756"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.0",
                "docs": null,
                "readme": "# Static Webpage extension\n\nThis uses python to serve a static HTML page using Vue and Vuetify as an extension. The static page in this example talks to a simple python backend.\n\nto build:\n\nEnable qemu static support with a docker\n\n```\ndocker buildx create --name multiarch --driver docker-container --use\ndocker run --rm --privileged multiarch/qemu-user-static --reset -p yes\n```\n\nThen build it:\n\n`docker buildx build --platform linux/amd64,linux/arm/v7 . -t YOURDOCKERHUBUSER/YOURDOCKERHUBREPO:latest --output type=registry\n`",
                "support": "https://github.com/Williangalvani/BlueOS-examples/",
                "requirements": "core >= 1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "80/tcp": {}
                    },
                    "HostConfig": {
                        "Binds": [
                            "/root/.config:/root/.config"
                        ],
                        "PortBindings": {
                            "80/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    {
        "identifier": "jmrobotics.jm-connect",
        "name": "JM Connect",
        "website": "https://www.jmrobotics.no",
        "docker": "maphstra/jm-connect-blueos",
        "description": "JM Connect Extension for BlueOS",
        "extension_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/jmrobotics/jm-connect/extension_logo.png",
        "company_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/jmrobotics/company_logo.png",
        "versions": {
            "0.1.7": {
                "identifier": "08ebdb20-d1ee-5013-8b14-aebd673adef5",
                "type": "other",
                "website": "https://www.jmrobotics.no",
                "images": [
                    {
                        "expanded_size": 138667765,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:b5523947d1f8edbf6cb655969e2d53d78767007686d08dd60198acd4f1158219"
                    }
                ],
                "authors": [
                    {
                        "name": "Mads Peter Hammer Strand",
                        "email": "mads@jmrobotics.no"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "0.1.7",
                "docs": null,
                "readme": "# JM Robotics, JM-Connect Extension.\n\nThis extension is for connecting your ROV to the JM Connect Ecosystem.\nIt also allows controlling focus-level of JM Robotics focus-cameras. \n\nIn addition you can stream audio from the rpi's camera at http://<rov-ip>:8137 (beta)\n\n",
                "support": "https://www.jmrobotics.no",
                "requirements": "core >= 1",
                "company": {
                    "about": "",
                    "name": "JM Robotics",
                    "email": "support@jmrobotics.no"
                },
                "permissions": {
                    "Env": [
                        "SERVER_URL=https://software.jmrobotics.no/server/",
                        "I2CBUS=6",
                        "ROV_ID=<rov_id>"
                    ],
                    "ExposedPorts": {
                        "1337/tcp": {},
                        "8137/tcp": {},
                        "1338/tcp": {}
                    },
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "Binds": [
                            "/root/.config/jm:/root/.config",
                            "/var/run/docker.sock:/var/run/docker.sock"
                        ],
                        "ExtraHosts": [
                            "host.docker.internal:host-gateway"
                        ],
                        "PortBindings": {
                            "1337/tcp": [
                                {
                                    "HostPort": "1337"
                                }
                            ],
                            "8137/tcp": [
                                {
                                    "HostPort": "8137"
                                }
                            ],
                            "1338/tcp": [
                                {
                                    "HostPort": "1338"
                                }
                            ]
                        }
                    }
                }
            },
            "0.1.6": {
                "identifier": "a4b4f76c-05cc-5d2e-a10e-0f0c4f83ac56",
                "type": "other",
                "website": "https://www.jmrobotics.no",
                "images": [
                    {
                        "expanded_size": 138671180,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:6bf09bdef42b75b4b336aa8477b79f1ee68f2b538b59553f26635f30e2d3d9e7"
                    }
                ],
                "authors": [
                    {
                        "name": "Mads Peter Hammer Strand",
                        "email": "mads@jmrobotics.no"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "0.1.6",
                "docs": null,
                "readme": "# JM Robotics, JM-Connect Extension.\n\nThis extension is for connecting your ROV to the JM Connect Ecosystem.\nIt also allows controlling focus-level of JM Robotics focus-cameras. \n\nIn addition you can stream audio from the rpi's camera at http://<rov-ip>:8137 (beta)\n\n",
                "support": "https://www.jmrobotics.no",
                "requirements": "core >= 1",
                "company": {
                    "about": "",
                    "name": "JM Robotics",
                    "email": "support@jmrobotics.no"
                },
                "permissions": {
                    "Env": [
                        "SERVER_URL=https://software.jmrobotics.no/server/",
                        "I2CBUS=6",
                        "ROV_ID=<rov_id>"
                    ],
                    "ExposedPorts": {
                        "1337/tcp": {},
                        "8137/tcp": {},
                        "1338/tcp": {}
                    },
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "Binds": [
                            "/root/.config/jm:/root/.config",
                            "/var/run/docker.sock:/var/run/docker.sock"
                        ],
                        "ExtraHosts": [
                            "host.docker.internal:host-gateway"
                        ],
                        "PortBindings": {
                            "1337/tcp": [
                                {
                                    "HostPort": "1337"
                                }
                            ],
                            "8137/tcp": [
                                {
                                    "HostPort": "8137"
                                }
                            ],
                            "1338/tcp": [
                                {
                                    "HostPort": "1338"
                                }
                            ]
                        }
                    }
                }
            },
            "0.1.5": {
                "identifier": "daf1d7e7-6dc5-5812-b6fe-67232ff1b411",
                "type": "other",
                "website": "https://www.jmrobotics.no",
                "images": [
                    {
                        "expanded_size": 136304617,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:002194270ed9fbbe8cac68fa8c7d66e65e96bf5f0ca882afc1c739c4bedba43c"
                    }
                ],
                "authors": [
                    {
                        "name": "Mads Peter Hammer Strand",
                        "email": "mads@jmrobotics.no"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "0.1.5",
                "docs": null,
                "readme": "# JM Robotics, JM-Connect Extension.\n\nThis extension is for connecting your ROV to the JM Connect Ecosystem.\nIt also allows controlling focus-level of JM Robotics focus-cameras. \n\nIn addition you can stream audio from the rpi's camera at http://<rov-ip>:8137 (beta)\n\n",
                "support": "https://www.jmrobotics.no",
                "requirements": "core >= 1",
                "company": {
                    "about": "",
                    "name": "JM Robotics",
                    "email": "support@jmrobotics.no"
                },
                "permissions": {
                    "Env": [
                        "SERVER_URL=https://software.jmrobotics.no/server/",
                        "I2CBUS=6",
                        "ROV_ID=<rov_id>"
                    ],
                    "ExposedPorts": {
                        "1337/tcp": {},
                        "8137/tcp": {},
                        "1338/tcp": {}
                    },
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "Binds": [
                            "/root/.config/jm:/root/.config",
                            "/var/run/docker.sock:/var/run/docker.sock"
                        ],
                        "ExtraHosts": [
                            "host.docker.internal:host-gateway"
                        ],
                        "PortBindings": {
                            "1337/tcp": [
                                {
                                    "HostPort": "1337"
                                }
                            ],
                            "8137/tcp": [
                                {
                                    "HostPort": "8137"
                                }
                            ],
                            "1338/tcp": [
                                {
                                    "HostPort": "1338"
                                }
                            ]
                        }
                    }
                }
            },
            "0.1.4": {
                "identifier": "9e541814-e629-5f4a-8694-cbbc0cf59a34",
                "type": "other",
                "website": "https://www.jmrobotics.no",
                "images": [
                    {
                        "expanded_size": 136206402,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:4461f49763ed0adb0881470d76cc821acf0a7ededd41c97806bf1430a2e8cad6"
                    }
                ],
                "authors": [
                    {
                        "name": "Mads Peter Hammer Strand",
                        "email": "mads@jmrobotics.no"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "0.1.4",
                "docs": null,
                "readme": "# JM Robotics, JM-Connect Extension.\n\nThis extension is for connecting your ROV to the JM Connect Ecosystem.\nIt also allows controlling focus-level of JM Robotics focus-cameras. \n\nIn addition you can stream audio from the rpi's camera at http://<rov-ip>:8137 (beta)\n\n",
                "support": "https://www.jmrobotics.no",
                "requirements": "core >= 1",
                "company": {
                    "about": "",
                    "name": "JM Robotics",
                    "email": "support@jmrobotics.no"
                },
                "permissions": {
                    "Env": [
                        "SERVER_URL=https://software.jmrobotics.no/server/",
                        "I2CBUS=6",
                        "ROV_ID=<rov_id>"
                    ],
                    "ExposedPorts": {
                        "1337/tcp": {},
                        "8137/tcp": {},
                        "1338/tcp": {}
                    },
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "Binds": [
                            "/root/.config/jm:/root/.config",
                            "/var/run/docker.sock:/var/run/docker.sock"
                        ],
                        "ExtraHosts": [
                            "host.docker.internal:host-gateway"
                        ],
                        "PortBindings": {
                            "1337/tcp": [
                                {
                                    "HostPort": "1337"
                                }
                            ],
                            "8137/tcp": [
                                {
                                    "HostPort": "8137"
                                }
                            ],
                            "1338/tcp": [
                                {
                                    "HostPort": "1338"
                                }
                            ]
                        }
                    }
                }
            },
            "0.1.3": {
                "identifier": "fbc14f43-9f80-5186-9066-a2c52764f83d",
                "type": "other",
                "website": "https://www.jmrobotics.no",
                "images": [
                    {
                        "expanded_size": 136206392,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:198a4b4657e5c37caf15757ce6670877cc040f498d9704b79fde54711b50f4de"
                    }
                ],
                "authors": [
                    {
                        "name": "Mads Peter Hammer Strand",
                        "email": "mads@jmrobotics.no"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "0.1.3",
                "docs": null,
                "readme": "# JM Robotics, JM-Connect Extension.\n\nThis extension is for connecting your ROV to the JM Connect Ecosystem.\nIt also allows controlling focus-level of JM Robotics focus-cameras. \n\nIn addition you can stream audio from the rpi's camera at http://<rov-ip>:8137 (beta)\n\n",
                "support": "https://www.jmrobotics.no",
                "requirements": "core >= 1",
                "company": {
                    "about": "",
                    "name": "JM Robotics",
                    "email": "support@jmrobotics.no"
                },
                "permissions": {
                    "Env": [
                        "SERVER_URL=https://software.jmrobotics.no/server/",
                        "I2CBUS=6",
                        "ROV_ID=<rov_id>"
                    ],
                    "ExposedPorts": {
                        "1337/tcp": {},
                        "8137/tcp": {},
                        "1338/tcp": {}
                    },
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "Binds": [
                            "/root/.config/jm:/root/.config",
                            "/var/run/docker.sock:/var/run/docker.sock"
                        ],
                        "ExtraHosts": [
                            "host.docker.internal:host-gateway"
                        ],
                        "PortBindings": {
                            "1337/tcp": [
                                {
                                    "HostPort": "1337"
                                }
                            ],
                            "8137/tcp": [
                                {
                                    "HostPort": "8137"
                                }
                            ],
                            "1338/tcp": [
                                {
                                    "HostPort": "1338"
                                }
                            ]
                        }
                    }
                }
            },
            "0.1.2": {
                "identifier": "2104939c-c7c6-52a3-82b0-0c7834424a34",
                "type": "other",
                "website": "https://www.jmrobotics.no",
                "images": [
                    {
                        "expanded_size": 136201023,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:2249b4f0a6f10851cd51ce43b9323afe9cfe3c9ff759d9c035815a861d14aea0"
                    }
                ],
                "authors": [
                    {
                        "name": "Mads Peter Hammer Strand",
                        "email": "mads@jmrobotics.no"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "0.1.2",
                "docs": null,
                "readme": "# JM Robotics, JM-Connect Extension.\n\nThis extension is for connecting your ROV to the JM Connect Ecosystem.\nIt also allows controlling focus-level of JM Robotics focus-cameras. \n\nIn addition you can stream audio from the rpi's camera at http://<rov-ip>:8137 (beta)\n\n",
                "support": "https://www.jmrobotics.no",
                "requirements": "core >= 1",
                "company": {
                    "about": "",
                    "name": "JM Robotics",
                    "email": "support@jmrobotics.no"
                },
                "permissions": {
                    "Env": [
                        "SERVER_URL=https://software.jmrobotics.no/server/",
                        "I2CBUS=6",
                        "ROV_ID=<rov_id>"
                    ],
                    "ExposedPorts": {
                        "1337/tcp": {},
                        "8137/tcp": {},
                        "1338/tcp": {}
                    },
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "Binds": [
                            "/root/.config/jm:/root/.config",
                            "/var/run/docker.sock:/var/run/docker.sock"
                        ],
                        "ExtraHosts": [
                            "host.docker.internal:host-gateway"
                        ],
                        "PortBindings": {
                            "1337/tcp": [
                                {
                                    "HostPort": "1337"
                                }
                            ],
                            "8137/tcp": [
                                {
                                    "HostPort": "8137"
                                }
                            ],
                            "1338/tcp": [
                                {
                                    "HostPort": "1338"
                                }
                            ]
                        }
                    }
                }
            },
            "0.1.1": {
                "identifier": "42117cfd-19c3-5487-8c86-0c64ac5904a8",
                "type": "other",
                "website": "https://www.jmrobotics.no",
                "images": [
                    {
                        "expanded_size": 97327764,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:93eae4b370102f9b40f1df916e30e29f62ece3a6bfd0d9f30a229f00c65f1fe3"
                    }
                ],
                "authors": [
                    {
                        "name": "Mads Peter Hammer Strand",
                        "email": "mads@jmrobotics.no"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "0.1.1",
                "docs": null,
                "readme": "# JM Robotics, JM-Connect Extension.\n\nThis extension is for connecting your ROV to the JM Connect Ecosystem.\nIt also allows controlling focus-level of JM Robotics focus-cameras. \n\nIn addition you can stream audio from the rpi's camera at http://<rov-ip>:8137 (beta)\n\n",
                "support": "https://www.jmrobotics.no",
                "requirements": "core >= 1",
                "company": {
                    "about": "",
                    "name": "JM Robotics",
                    "email": "support@jmrobotics.no"
                },
                "permissions": {
                    "Env": [
                        "SERVER_URL=https://software.jmrobotics.no/server/",
                        "I2CBUS=6",
                        "ROV_ID=<rov_id>"
                    ],
                    "ExposedPorts": {
                        "1337/tcp": {},
                        "8137/tcp": {},
                        "1338/tcp": {}
                    },
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "Binds": [
                            "/root/.config/jm:/root/.config"
                        ],
                        "ExtraHosts": [
                            "host.docker.internal:host-gateway"
                        ],
                        "PortBindings": {
                            "1337/tcp": [
                                {
                                    "HostPort": "1337"
                                }
                            ],
                            "8137/tcp": [
                                {
                                    "HostPort": "8137"
                                }
                            ],
                            "1338/tcp": [
                                {
                                    "HostPort": "1338"
                                }
                            ]
                        }
                    }
                }
            },
            "0.1.0": {
                "identifier": "eaeca9bf-4fdd-5338-b35c-df1cc1255a46",
                "type": "other",
                "website": "https://www.jmrobotics.no",
                "images": [
                    {
                        "expanded_size": 96709262,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:541ec3d6cdba151cdb6498ef8f1af4af800d9ecccc8563eedd96d539a1c29157"
                    }
                ],
                "authors": [
                    {
                        "name": "Mads Peter Hammer Strand",
                        "email": "mads@jmrobotics.no"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "0.1.0",
                "docs": null,
                "readme": "# JM Robotics, JM-Connect Extension.\n\nThis extension is for connecting your ROV to the JM Connect Ecosystem.\nIt also allows controlling focus-level of JM Robotics focus-cameras. \n\nIn addition you can stream audio from the rpi's camera at http://<rov-ip>:8137 (beta)\n\n",
                "support": "https://www.jmrobotics.no",
                "requirements": "core >= 1",
                "company": {
                    "about": "",
                    "name": "JM Robotics",
                    "email": "support@jmrobotics.no"
                },
                "permissions": {
                    "Env": [
                        "SERVER_URL=https://software.jmrobotics.no/server/",
                        "I2CBUS=6",
                        "ROV_ID=<rov_id>"
                    ],
                    "ExposedPorts": {
                        "1337/tcp": {},
                        "8137/tcp": {},
                        "1338/tcp": {}
                    },
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "Binds": [
                            "/root/.config/jm:/root/.config"
                        ],
                        "ExtraHosts": [
                            "host.docker.internal:host-gateway"
                        ],
                        "PortBindings": {
                            "1337/tcp": [
                                {
                                    "HostPort": "1337"
                                }
                            ],
                            "8137/tcp": [
                                {
                                    "HostPort": "8137"
                                }
                            ],
                            "1338/tcp": [
                                {
                                    "HostPort": "1338"
                                }
                            ]
                        }
                    }
                }
            },
            "0.0.9": {
                "identifier": "79a9df48-e803-535b-8859-5b0d7c4ac99b",
                "type": "other",
                "website": "https://www.jmrobotics.no",
                "images": [
                    {
                        "expanded_size": 96709149,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:fe37249ef731d10570ae5364036104c7ec2ce3ae84acfed3f9e8ae8d4b2c0215"
                    }
                ],
                "authors": [
                    {
                        "name": "Mads Peter Hammer Strand",
                        "email": "mads@jmrobotics.no"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "0.0.9",
                "docs": null,
                "readme": "# JM Robotics, JM-Connect Extension.\n\nThis extension is for connecting your ROV to the JM Connect Ecosystem.\nIt also allows controlling focus-level of JM Robotics focus-cameras. \n\nIn addition you can stream audio from the rpi's camera at http://<rov-ip>:8137 (beta)\n\n",
                "support": "https://www.jmrobotics.no",
                "requirements": "core >= 1",
                "company": {
                    "about": "",
                    "name": "JM Robotics",
                    "email": "support@jmrobotics.no"
                },
                "permissions": {
                    "Env": [
                        "SERVER_URL=https://software.jmrobotics.no/server/",
                        "I2CBUS=6",
                        "ROV_ID=<rov_id>"
                    ],
                    "ExposedPorts": {
                        "1337/tcp": {},
                        "8137/tcp": {},
                        "1338/tcp": {}
                    },
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "Binds": [
                            "/root/.config/jm:/root/.config"
                        ],
                        "ExtraHosts": [
                            "host.docker.internal:host-gateway"
                        ],
                        "PortBindings": {
                            "1337/tcp": [
                                {
                                    "HostPort": "1337"
                                }
                            ],
                            "8137/tcp": [
                                {
                                    "HostPort": "8137"
                                }
                            ],
                            "1338/tcp": [
                                {
                                    "HostPort": "1338"
                                }
                            ]
                        }
                    }
                }
            },
            "0.0.8": {
                "identifier": "8ea1115d-e017-5e93-b643-31269c341f4d",
                "type": "other",
                "website": "https://www.jmrobotics.no",
                "images": [
                    {
                        "expanded_size": 97114085,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:f4ca957ef8684090eb19561193c745a318565bac884edc9b7c936464867dcb3b"
                    }
                ],
                "authors": [
                    {
                        "name": "Mads Peter Hammer Strand",
                        "email": "mads@jmrobotics.no"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "0.0.8",
                "docs": null,
                "readme": "# JM Robotics, JM-Connect Extension.\n\nThis extension is for connecting your ROV to the JM Connect Ecosystem.\nIt also allows controlling focus-level of JM Robotics focus-cameras. \n\nIn addition you can stream audio from the rpi's camera at http://<rov-ip>:8137 (beta)\n\n",
                "support": "https://www.jmrobotics.no",
                "requirements": "core >= 1",
                "company": {
                    "about": "",
                    "name": "JM Robotics",
                    "email": "support@jmrobotics.no"
                },
                "permissions": {
                    "Env": [
                        "SERVER_URL=https://software.jmrobotics.no/server/",
                        "I2CBUS=6",
                        "ROV_ID=<rov_id>"
                    ],
                    "ExposedPorts": {
                        "1337/tcp": {},
                        "8137/tcp": {},
                        "1338/tcp": {}
                    },
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "Binds": [
                            "/root/.config/jm:/root/.config"
                        ],
                        "ExtraHosts": [
                            "host.docker.internal:host-gateway"
                        ],
                        "PortBindings": {
                            "1337/tcp": [
                                {
                                    "HostPort": "1337"
                                }
                            ],
                            "8137/tcp": [
                                {
                                    "HostPort": "8137"
                                }
                            ],
                            "1338/tcp": [
                                {
                                    "HostPort": "1338"
                                }
                            ]
                        }
                    }
                }
            },
            "0.0.7": {
                "identifier": "e2484dd2-e2ba-5ac4-9d91-7d717f618332",
                "type": "other",
                "website": "https://www.jmrobotics.no",
                "images": [
                    {
                        "expanded_size": 96633870,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:29567855a636348f71a638082d335c6229f095d74548b4b4d42ce5752a1a77fe"
                    }
                ],
                "authors": [
                    {
                        "name": "Mads Peter Hammer Strand",
                        "email": "mads@jmrobotics.no"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "0.0.7",
                "docs": null,
                "readme": "Could not get readme, expected type to be text/plain but got text/html",
                "support": "https://www.jmrobotics.no",
                "requirements": "core >= 1",
                "company": {
                    "about": "",
                    "name": "JM Robotics",
                    "email": "support@jmrobotics.no"
                },
                "permissions": {
                    "Env": [
                        "SERVER_URL=https://software.jmrobotics.no/server/",
                        "I2CBUS=6",
                        "ROV_ID=<rov_id>"
                    ],
                    "ExposedPorts": {
                        "1337/tcp": {},
                        "8137/tcp": {},
                        "1338/tcp": {}
                    },
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "Binds": [
                            "/root/.config/jm:/root/.config"
                        ],
                        "ExtraHosts": [
                            "host.docker.internal:host-gateway"
                        ],
                        "PortBindings": {
                            "1337/tcp": [
                                {
                                    "HostPort": "1337"
                                }
                            ],
                            "8137/tcp": [
                                {
                                    "HostPort": "8137"
                                }
                            ],
                            "1338/tcp": [
                                {
                                    "HostPort": "1338"
                                }
                            ]
                        }
                    }
                }
            },
            "0.0.6": {
                "identifier": "d859a0f3-6010-5e77-bf71-73b51788130e",
                "type": "other",
                "website": "https://www.jmrobotics.no",
                "images": [
                    {
                        "expanded_size": 94349911,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:2d7302f32d74adfdebe98b99b9c2f9b596ab356be2deaa163185bae96d922002"
                    }
                ],
                "authors": [
                    {
                        "name": "Mads Peter Hammer Strand",
                        "email": "mads@jmrobotics.no"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "0.0.6",
                "docs": null,
                "readme": "Could not get readme, expected type to be text/plain but got text/html",
                "support": "https://www.jmrobotics.no",
                "requirements": "core >= 1",
                "company": {
                    "about": "",
                    "name": "JM Robotics",
                    "email": "support@jmrobotics.no"
                },
                "permissions": {
                    "Env": [
                        "SERVER_URL=https://software.jmrobotics.no/server/",
                        "I2CBUS=6",
                        "ROV_ID=<rov_id>"
                    ],
                    "ExposedPorts": {
                        "1337/tcp": {},
                        "8137/tcp": {},
                        "1338/tcp": {}
                    },
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "Binds": [
                            "/root/.config/jm:/root/.config"
                        ],
                        "ExtraHosts": [
                            "host.docker.internal:host-gateway"
                        ],
                        "PortBindings": {
                            "1337/tcp": [
                                {
                                    "HostPort": "1337"
                                }
                            ],
                            "8137/tcp": [
                                {
                                    "HostPort": "8137"
                                }
                            ],
                            "1338/tcp": [
                                {
                                    "HostPort": "1338"
                                }
                            ]
                        }
                    }
                }
            },
            "0.0.5": {
                "identifier": "5567cfc0-0947-559b-b69c-3a0eb7ebba12",
                "type": "other",
                "website": "https://www.jmrobotics.no",
                "images": [
                    {
                        "expanded_size": 94350096,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:df13934cdb1e4d0bd6b3dd5f1d94856866de13e5e1e246a817243510eab945b7"
                    }
                ],
                "authors": [
                    {
                        "name": "Mads Peter Hammer Strand",
                        "email": "mads@jmrobotics.no"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "0.0.5",
                "docs": null,
                "readme": "Could not get readme, expected type to be text/plain but got text/html",
                "support": "https://www.jmrobotics.no",
                "requirements": "core >= 1",
                "company": {
                    "about": "",
                    "name": "JM Robotics",
                    "email": "support@jmrobotics.no"
                },
                "permissions": {
                    "Env": [
                        "SERVER_URL=https://software.jmrobotics.no/server/",
                        "I2CBUS=6",
                        "ROV_ID=<rov_id>"
                    ],
                    "ExposedPorts": {
                        "1337/tcp": {},
                        "8137/tcp": {},
                        "1338/tcp": {}
                    },
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "Binds": [
                            "/root/.config/jm:/root/.config"
                        ],
                        "ExtraHosts": [
                            "host.docker.internal:host-gateway"
                        ],
                        "PortBindings": {
                            "1337/tcp": [
                                {
                                    "HostPort": "1337"
                                }
                            ],
                            "8137/tcp": [
                                {
                                    "HostPort": "8137"
                                }
                            ],
                            "1338/tcp": [
                                {
                                    "HostPort": "1338"
                                }
                            ]
                        }
                    }
                }
            },
            "0.0.4": {
                "identifier": "fbde77c2-558e-5654-9fba-00720ba5ca46",
                "type": "other",
                "website": "https://www.jmrobotics.no",
                "images": [
                    {
                        "expanded_size": 98481422,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:a383b8e2f0888f718c52bc92f99d4180bce41e3d9d44ef6886b642e6ae2d1719"
                    }
                ],
                "authors": [
                    {
                        "name": "Mads Peter Hammer Strand",
                        "email": "mads@jmrobotics.no"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "0.0.4",
                "docs": null,
                "readme": "Could not get readme, expected type to be text/plain but got text/html",
                "support": "https://www.jmrobotics.no",
                "requirements": "core >= 1",
                "company": {
                    "about": "",
                    "name": "JM Robotics",
                    "email": "support@jmrobotics.no"
                },
                "permissions": {
                    "Env": [
                        "SERVER_URL=https://software.jmrobotics.no/server/",
                        "I2CBUS=6",
                        "ROV_ID=<rov_id>"
                    ],
                    "ExposedPorts": {
                        "1337/tcp": {},
                        "8137/tcp": {},
                        "1338/tcp": {}
                    },
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "Binds": [
                            "/root/.config/jm:/root/.config"
                        ],
                        "ExtraHosts": [
                            "host.docker.internal:host-gateway"
                        ],
                        "PortBindings": {
                            "1337/tcp": [
                                {
                                    "HostPort": "1337"
                                }
                            ],
                            "8137/tcp": [
                                {
                                    "HostPort": "8137"
                                }
                            ],
                            "1338/tcp": [
                                {
                                    "HostPort": "1338"
                                }
                            ]
                        }
                    }
                }
            },
            "0.0.3": {
                "identifier": "04354e64-e2b2-59ba-b0d7-61cbe54a3820",
                "type": "other",
                "website": "https://www.jmrobotics.no",
                "images": [
                    {
                        "expanded_size": 98481100,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:c58fd0b5d2f68f9df5924ff54f444849aa1c413e40a2725bc01cf6a3b6ca3645"
                    }
                ],
                "authors": [
                    {
                        "name": "Mads Peter Hammer Strand",
                        "email": "mads@jmrobotics.no"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "0.0.3",
                "docs": null,
                "readme": "Could not get readme, expected type to be text/plain but got text/html",
                "support": "https://www.jmrobotics.no",
                "requirements": "core >= 1",
                "company": {
                    "about": "",
                    "name": "JM Robotics",
                    "email": "support@jmrobotics.no"
                },
                "permissions": {
                    "Env": [
                        "SERVER_URL=https://software.jmrobotics.no/server/",
                        "ROV_ID=<rov_id>"
                    ],
                    "ExposedPorts": {
                        "1337/tcp": {},
                        "8137/tcp": {},
                        "1338/tcp": {}
                    },
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "Binds": [
                            "/root/.config/jm:/root/.config"
                        ],
                        "ExtraHosts": [
                            "host.docker.internal:host-gateway"
                        ],
                        "PortBindings": {
                            "1337/tcp": [
                                {
                                    "HostPort": "1337"
                                }
                            ],
                            "8137/tcp": [
                                {
                                    "HostPort": "8137"
                                }
                            ],
                            "1338/tcp": [
                                {
                                    "HostPort": "1338"
                                }
                            ]
                        }
                    }
                }
            },
            "0.0.2": {
                "identifier": "a102f7fd-cb95-5bb6-99ed-3b0b1ae0b1cc",
                "type": "other",
                "website": "https://www.jmrobotics.no",
                "images": [
                    {
                        "expanded_size": 55223354,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:50251ec8c463a50ab3013bdcdd6bfb1f913c34ffe579f326c12d539b5bd14248"
                    }
                ],
                "authors": [
                    {
                        "name": "Mads Peter Hammer Strand",
                        "email": "mads@jmrobotics.no"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "0.0.2",
                "docs": null,
                "readme": "Could not get readme, expected type to be text/plain but got text/html",
                "support": "https://www.jmrobotics.no",
                "requirements": "core >= 1",
                "company": {
                    "about": "",
                    "name": "JM Robotics",
                    "email": "support@jmrobotics.no"
                },
                "permissions": {
                    "Env": [
                        "SERVER_URL=https://software.jmrobotics.no/server/",
                        "ROV_ID=<rov_id>"
                    ],
                    "ExposedPorts": {
                        "1337/tcp": {},
                        "1338/tcp": {}
                    },
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "Binds": [
                            "/root/.config/jm:/root/.config"
                        ],
                        "ExtraHosts": [
                            "host.docker.internal:host-gateway"
                        ],
                        "PortBindings": {
                            "1337/tcp": [
                                {
                                    "HostPort": "1337"
                                }
                            ],
                            "1338/tcp": [
                                {
                                    "HostPort": "1338"
                                }
                            ]
                        }
                    }
                }
            },
            "0.0.1": {
                "identifier": "b7af0fda-ea84-5b6a-82fa-e72932971ebd",
                "type": "other",
                "website": "https://www.jmrobotics.no",
                "images": [
                    {
                        "expanded_size": 43060080,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:6697aeaebf7b1ffe2847c7434e8a3dd2d42872efb359d0f978ba6152140313fa"
                    }
                ],
                "authors": [
                    {
                        "name": "Mads Peter Hammer Strand",
                        "email": "mads@jmrobotics.no"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "0.0.1",
                "docs": null,
                "readme": "Could not get readme, expected type to be text/plain but got text/html",
                "support": "https://www.jmrobotics.no",
                "requirements": "core >= 1",
                "company": {
                    "about": "",
                    "name": "JM Robotics",
                    "email": "support@jmrobotics.no"
                },
                "permissions": {
                    "Env": [
                        "SERVER_URL=https://software.jmrobotics.no/server/",
                        "ROV_ID=<rov_id>"
                    ],
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Binds": [
                            "/root/.config/jm:/root/.config"
                        ],
                        "ExtraHosts": [
                            "host.docker.internal:host-gateway"
                        ]
                    }
                }
            }
        }
    },
    {
        "identifier": "waterlinked.ugps",
        "name": "Water Linked UGPS",
        "website": "https://github.com/waterlinked/blueos-ugps-extension",
        "docker": "waterlinked/blueos-ugps-extension",
        "description": "Provides location with GPS and SBL acoustic positioning",
        "extension_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/waterlinked/ugps/extension_logo.png",
        "company_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/waterlinked/company_logo.png",
        "versions": {
            "v1.0.7-beta.2": {
                "identifier": "01960110-d3b4-5ec9-b831-fc6ed5504c76",
                "type": "device-integration",
                "website": "https://github.com/waterlinked/blueos-ugps-extension",
                "images": [
                    {
                        "expanded_size": 42996077,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:827ca6180221c282ced1a2c58e02388c1cf1b4eb87cca1604355a90bf0b81293"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "positioning",
                    "navigation",
                    "short-baseline"
                ],
                "extra_links": {},
                "tag": "v1.0.7-beta.2",
                "docs": null,
                "readme": "# BlueOS Extension for Water Linked Underwater GPS\n\n## State\n\nThis extension **has no UI page** (so it creates no listing in the sidebar of BlueOS).\n\n## Functionality\n\nAssuming the UGPS is detected and working, this service\n* forwards MAVLink data from [Mavlink2Rest](https://github.com/patrickelectric/mavlink2rest) like depth to the UGPS Topside (to enable it to function)\n* forwards locator position from UGPS Topside to MAVLink (message `GPS_INPUT`)\n    * the autopilot should send corresponding `GPS_RAW_INT` messages to the topside computer (QGroundControl)\n    * the autopilot sends regular `GLOBAL_POSITION_INT` messages to the topside computer with its filtered position estimates\n* forwards topside position from UGPS Topside to UDP port `14401` with NMEA to be received by QGroundControl.\n    * This feature is **experimental** and does not work reliably with all version of QGroundControl.\n\nIf you do not have access to a UGPS system, you can use UGPS_HOST=https://demo.waterlinked.com , which simulates a UGPS system with its API.\n\nHardware documentation can be found at https://waterlinked.github.io/underwater-gps/integration/bluerov-integration/\n\n## How to install\n\nThere are 2 options\n\n### Preferred: Use the extensions manager in BlueOS > 1.1.0\n* Click Extensions > Extensions Manager\n* Install this extension\n\nConfiguration is usually not required, but can be done by editing the extension in the \"Installed\" tab of the Extensions Manager.\n\nEditing requires [Pirate Mode](https://docs.bluerobotics.com/ardusub-zola/software/onboard/BlueOS-latest/advanced-usage/#pirate-mode)\nto be enabled, after which the \"Edit\" button can be used. Copy the Original Settings contents\ninto the Custom settings box, and (if necessary) change the IPs/Host addresses, e.g. to use the demo server:\n```\n{\n  \"NetworkMode\": \"host\",\n  \"Env\": [\n  \"UGPS_HOST=https://demo.waterlinked.com\",\n  \"MAVLINK_HOST=http://192.168.2.2:6040\",\n  \"QGC_IP=192.168.2.1\",\n  \"EXTRA_ARGS=\"\n  ]\n}\n```\n\nUse the \"View Logs\" button to check the status.\n\n### For developers: Build docker image yourself and start it\n\nTo set this up, ssh into the Raspberry Pi (or access via `red-pill` in [BlueOS Terminal](https://docs.bluerobotics.com/ardusub-zola/software/onboard/BlueOS-1.0/advanced-usage/#terminal))\n\ninstall git, clone this repository and run\n```\n# build the docker image\ndocker build -t waterlinked/blueos-ugps-extension:latest .\n# see all images\ndocker images\n\n# running the plugin\n\n# either: run detached\n#   with standard command\ndocker run -d --net=host waterlinked/blueos-ugps-extension:latest python app/main.py --ugps_host http://192.168.2.94 --mavlink_host http://192.168.2.2:6040 --qgc_ip 192.168.2.1\n#   or with demo server\ndocker run -d --net=host waterlinked/blueos-ugps-extension:latest python app/main.py --ugps_host https://demo.waterlinked.com --mavlink_host http://192.168.2.2:6040 --qgc_ip 192.168.2.1\n\n# or: in interactive shell to get debug output\ndocker run -it waterlinked/blueos-ugps-extension:latest /bin/bash\n#   with standard command\ncd app && python main.py --ugps_host http://192.168.2.94 --mavlink_host http://192.168.2.2:6040 --qgc_ip 192.168.2.1\n#   or with demo server\ncd app && python main.py --ugps_host https://demo.waterlinked.com --mavlink_host http://192.168.2.2:6040 --qgc_ip 192.168.2.1\n# end interactive session\nexit\n\n# then stop/start/look at log with\ndocker stop [container-id]\ndocker start [container-id]\ndocker log [container-id] # if run detached\n\n# if you are a developer, upload the docker image to registry with (replace \"latest\" with desired tag)\ndocker login -u waterlinked\ndocker push waterlinked/blueos-ugps-extension:latest\n```\n",
                "support": "https://github.com/waterlinked/blueos-ugps-extension/issues",
                "requirements": "core >= 1.1",
                "company": {
                    "about": "",
                    "name": "Water Linked",
                    "email": "support@waterlinked.com"
                },
                "permissions": {
                    "NetworkMode": "host",
                    "Env": [
                        "UGPS_HOST=http://192.168.2.94",
                        "MAVLINK_HOST=http://192.168.2.2:6040",
                        "QGC_IP=192.168.2.1",
                        "EXTRA_ARGS="
                    ]
                }
            },
            "v1.0.7-beta.1": {
                "identifier": "d1d3cffe-5837-5348-8d19-67f7c271f461",
                "type": "device-integration",
                "website": "https://github.com/waterlinked/blueos-ugps-extension",
                "images": [
                    {
                        "expanded_size": 44991174,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:90ee1221fa1180cf9df8ba951fe9f7bd72223ff867c99c99b97691baa8063ac7"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "positioning",
                    "navigation",
                    "short-baseline"
                ],
                "extra_links": {},
                "tag": "v1.0.7-beta.1",
                "docs": null,
                "readme": "# BlueOS Extension for Water Linked Underwater GPS\n\n## State\n\nThis extension **has no UI page** (so it creates no listing in the sidebar of BlueOS).\n\n## Functionality\n\nAssuming the UGPS is detected and working, this service\n* forwards MAVLink data from [Mavlink2Rest](https://github.com/patrickelectric/mavlink2rest) like depth to the UGPS Topside (to enable it to function)\n* forwards locator position from UGPS Topside to MAVLink (message `GPS_INPUT`)\n    * the autopilot should send corresponding `GPS_RAW_INT` messages to the topside computer (QGroundControl)\n    * the autopilot sends regular `GLOBAL_POSITION_INT` messages to the topside computer with its filtered position estimates\n* forwards topside position from UGPS Topside to UDP port `14401` with NMEA to be received by QGroundControl.\n    * This feature is **experimental** and does not work reliably with all version of QGroundControl.\n\nIf you do not have access to a UGPS system, you can use UGPS_HOST=https://demo.waterlinked.com , which simulates a UGPS system with its API.\n\nHardware documentation can be found at https://waterlinked.github.io/underwater-gps/integration/bluerov-integration/\n\n## How to install\n\nThere are 2 options\n\n### Preferred: Use the extensions manager in BlueOS > 1.1.0\n* Click Extensions > Extensions Manager\n* Install this extension\n\nConfiguration is usually not required, but can be done by editing the extension in the \"Installed\" tab of the Extensions Manager.\n\nEditing requires [Pirate Mode](https://docs.bluerobotics.com/ardusub-zola/software/onboard/BlueOS-latest/advanced-usage/#pirate-mode)\nto be enabled, after which the \"Edit\" button can be used. Copy the Original Settings contents\ninto the Custom settings box, and (if necessary) change the IPs/Host addresses, e.g. to use the demo server:\n```\n{\n  \"NetworkMode\": \"host\",\n  \"Env\": [\n  \"UGPS_HOST=https://demo.waterlinked.com\",\n  \"MAVLINK_HOST=http://192.168.2.2:6040\",\n  \"QGC_IP=192.168.2.1\",\n  \"EXTRA_ARGS=\"\n  ]\n}\n```\n\nUse the \"View Logs\" button to check the status.\n\n### For developers: Build docker image yourself and start it\n\nTo set this up, ssh into the Raspberry Pi (or access via `red-pill` in [BlueOS Terminal](https://docs.bluerobotics.com/ardusub-zola/software/onboard/BlueOS-1.0/advanced-usage/#terminal))\n\ninstall git, clone this repository and run\n```\n# build the docker image\ndocker build -t waterlinked/blueos-ugps-extension:latest .\n# see all images\ndocker images\n\n# running the plugin\n\n# either: run detached\n#   with standard command\ndocker run -d --net=host waterlinked/blueos-ugps-extension:latest python app/main.py --ugps_host http://192.168.2.94 --mavlink_host http://192.168.2.2:6040 --qgc_ip 192.168.2.1\n#   or with demo server\ndocker run -d --net=host waterlinked/blueos-ugps-extension:latest python app/main.py --ugps_host https://demo.waterlinked.com --mavlink_host http://192.168.2.2:6040 --qgc_ip 192.168.2.1\n\n# or: in interactive shell to get debug output\ndocker run -it waterlinked/blueos-ugps-extension:latest /bin/bash\n#   with standard command\ncd app && python main.py --ugps_host http://192.168.2.94 --mavlink_host http://192.168.2.2:6040 --qgc_ip 192.168.2.1\n#   or with demo server\ncd app && python main.py --ugps_host https://demo.waterlinked.com --mavlink_host http://192.168.2.2:6040 --qgc_ip 192.168.2.1\n# end interactive session\nexit\n\n# then stop/start/look at log with\ndocker stop [container-id]\ndocker start [container-id]\ndocker log [container-id] # if run detached\n\n# if you are a developer, upload the docker image to registry with (replace \"latest\" with desired tag)\ndocker login -u waterlinked\ndocker push waterlinked/blueos-ugps-extension:latest\n```\n",
                "support": "https://github.com/waterlinked/blueos-ugps-extension/issues",
                "requirements": "core >= 1.1",
                "company": {
                    "about": "",
                    "name": "Water Linked",
                    "email": "support@waterlinked.com"
                },
                "permissions": {
                    "NetworkMode": "host",
                    "Env": [
                        "UGPS_HOST=http://192.168.2.94",
                        "MAVLINK_HOST=http://192.168.2.2:6040",
                        "QGC_IP=192.168.2.1",
                        "EXTRA_ARGS="
                    ]
                }
            },
            "v1.0.6": {
                "identifier": "a16ae9c5-eeb8-5263-8b1c-0401b0a1e2da",
                "type": "device-integration",
                "website": "https://github.com/waterlinked/blueos-ugps-extension",
                "images": [
                    {
                        "expanded_size": 44982471,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:d1c746dac6246d215f00966754129fb78375c1e98bba95d9a0f3a165a2522805"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [
                    "positioning",
                    "navigation",
                    "short-baseline"
                ],
                "extra_links": {},
                "tag": "v1.0.6",
                "docs": null,
                "readme": "# BlueOS Extension for Water Linked Underwater GPS\n\n## State\n\nThis extension is currently in development. It **has no UI page** (so creates no listing in the sidebar of BlueOS).\n\n## Functionality\n\nAssuming the UGPS is detected and working this service\n* forwards MAVLink data from [Mavlink2Rest](https://github.com/patrickelectric/mavlink2rest) like depth to the UGPS Topside (to enable it to function)\n* forwards locator position from UGPS Topside to MAVLink (message `GPS_INPUT`)\n    * the autopilot should send corresponding `GPS_RAW_INT` messages to the topside computer (QGroundControl)\n    * the autopilot sends regular `GLOBAL_POSITION_INT` messages to the topside computer with its filtered position estimates\n* forwards topside position from UGPS Topside to UDP port `14401` with NMEA to be received by QGroundControl.\n\nIf you do not have access to a UGPS system, you can use UGPS_HOST=https://demo.waterlinked.com , which simulates a UGPS system with its API.\n\nHardware documentation can be found at https://waterlinked.github.io/underwater-gps/integration/bluerov-integration/\n\n## How to install\n\nThere are 2 options\n\n### Use the extensions manager in BlueOS 1.1.0\n* Click Extensions > Extensions Manager\n* Install this extension\n\nConfiguration is usually not required, but can be done by editing the extension in the \"Installed\" tab of the Extensions Manager.\n\nEditing requires [Pirate Mode](https://docs.bluerobotics.com/ardusub-zola/software/onboard/BlueOS-latest/advanced-usage/#pirate-mode)\nto be enabled, after which the \"Edit\" button can be used. Copy the Original Settings contents\ninto the Custom settings box, and (if necessary) change the IPs/Host addresses, e.g. to use the demo server:\n```\n{\n  \"NetworkMode\": \"host\",\n  \"Env\": [\n  \"UGPS_HOST=https://demo.waterlinked.com\",\n  \"MAVLINK_HOST=http://192.168.2.2:6040\",\n  \"QGC_IP=192.168.2.1\",\n  \"EXTRA_ARGS=\"\n  ]\n}\n```\n\nUse the \"View Logs\" button to check the status.\n\n### Build docker image yourself and start it\n\nTo set this up, ssh into the Raspberry Pi (or access via `red-pill` in [BlueOS Terminal](https://docs.bluerobotics.com/ardusub-zola/software/onboard/BlueOS-1.0/advanced-usage/#terminal))\n\ninstall git, clone this repository and run\n```\n# build the docker image\ndocker build -t waterlinked/blueos-ugps-extension:latest .\n# see all images\ndocker images\n\n# running the plugin\n\n# either: run detached\n#   with standard command\ndocker run -d --net=host waterlinked/blueos-ugps-extension:latest python app/main.py --ugps_host http://192.168.2.94 --mavlink_host http://192.168.2.2:6040 --qgc_ip 192.168.2.1\n#   or with demo server\ndocker run -d --net=host waterlinked/blueos-ugps-extension:latest python app/main.py --ugps_host https://demo.waterlinked.com --mavlink_host http://192.168.2.2:6040 --qgc_ip 192.168.2.1\n\n# or: in interactive shell to get debug output\ndocker run -it waterlinked/blueos-ugps-extension:latest /bin/bash\n#   with standard command\ncd app && python main.py --ugps_host http://192.168.2.94 --mavlink_host http://192.168.2.2:6040 --qgc_ip 192.168.2.1\n#   or with demo server\ncd app && python main.py --ugps_host https://demo.waterlinked.com --mavlink_host http://192.168.2.2:6040 --qgc_ip 192.168.2.1\n# end interactive session\nexit\n\n# then stop/start/look at log with\ndocker stop [container-id]\ndocker start [container-id]\ndocker log [container-id] # if run detached\n\n# if you are a developer, upload to registry with (replace latest with desired tag)\ndocker login -u waterlinked\ndocker push waterlinked/blueos-ugps-extension:latest\n```",
                "support": "https://github.com/waterlinked/blueos-ugps-extension/issues",
                "requirements": "core >= 1.1",
                "company": {
                    "about": "",
                    "name": "Water Linked",
                    "email": "support@waterlinked.com"
                },
                "permissions": {
                    "NetworkMode": "host",
                    "Env": [
                        "UGPS_HOST=http://192.168.2.94",
                        "MAVLINK_HOST=http://192.168.2.2:6040",
                        "QGC_IP=192.168.2.1",
                        "EXTRA_ARGS="
                    ]
                }
            },
            "v1.0.4": {
                "identifier": "07593b5f-33d9-512b-92e7-bde2b70e0c1a",
                "type": "other",
                "website": "https://github.com/waterlinked/blueos-ugps-extension",
                "images": [
                    {
                        "expanded_size": 43100109,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:55811587b48ae3f980fa069e27d74c11a98567bd141eb2cb29cd3a0a43c39526"
                    }
                ],
                "authors": [
                    {
                        "name": "Willian Galvani",
                        "email": "willian@bluerobotics.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.4",
                "docs": null,
                "readme": "# BlueOS Extension for Water Linked Underwater GPS\n\n## State\n\nThis extension is currently in development. It **has no UI page** (so creates no listing in the sidebar of BlueOS).\n\n## Functionality\n\nAssuming the UGPS is detected and working this service\n* forwards MAVLink data from [Mavlink2Rest](https://github.com/patrickelectric/mavlink2rest) like depth to the UGPS Topside (to enable it to function)\n* forwards locator position from UGPS Topside to MAVLink (message `GPS_INPUT`)\n    * the autopilot should send corresponding `GPS_RAW_INT` messages to the topside computer (QGroundControl)\n    * the autopilot sends regular `GLOBAL_POSITION_INT` messages to the topside computer with its filtered position estimates\n* forwards topside position from UGPS Topside to UDP port `14401` with NMEA to be received by QGroundControl (implemented, but currently not tested)\n\nIf you do not have access to a UGPS system, you can use UGPS_HOST=https://demo.waterlinked.com , which simulates a UGPS system with its API.\n\nHardware documentation can be found at https://waterlinked.github.io/underwater-gps/integration/bluerov-integration/\n\n## How to install\n\nThere are 2 options\n\n### Use the extensions manager in BlueOS 1.1.0\n* Click Extensions > Extensions Manager\n* Install this extension\n\nConfiguration is usually not required, but can be done by editing the extension in the \"Installed\" tab of the Extensions Manager.\n\nEditing requires [Pirate Mode](https://docs.bluerobotics.com/ardusub-zola/software/onboard/BlueOS-latest/advanced-usage/#pirate-mode)\nto be enabled, after which the \"Edit\" button can be used. Copy the Original Settings contents\ninto the Custom settings box, and (if necessary) change the IPs/Host addresses:\n```\n    \"UGPS_HOST=http://192.168.2.94\",\n    \"MAVLINK_HOST=http://192.168.2.2:6040\",\n    \"QGC_IP=192.168.2.1\"\n```\n\nUse the \"View Logs\" button to check the status.\n\n### Build docker image yourself and start it\n\nTo set this up, ssh into the Raspberry Pi (or access via `red-pill` in [BlueOS Terminal](https://docs.bluerobotics.com/ardusub-zola/software/onboard/BlueOS-1.0/advanced-usage/#terminal))\n\ninstall git, clone this repository and run\n```\n# build the docker image\ndocker build -t waterlinked/blueos-ugps-extension:latest .\n# see all images\ndocker images\n\n# running the plugin\n\n# either: run detached\n#   with standard command\ndocker run -d --net=host waterlinked/blueos-ugps-extension:latest python app/main.py --ugps_host http://192.168.2.94 --mavlink_host http://192.168.2.2:6040 --qgc_ip 192.168.2.1\n#   or with demo server\ndocker run -d --net=host waterlinked/blueos-ugps-extension:latest python app/main.py --ugps_host https://demo.waterlinked.com --mavlink_host http://192.168.2.2:6040 --qgc_ip 192.168.2.1\n\n# or: in interactive shell to get debug output\ndocker run -it waterlinked/blueos-ugps-extension:latest /bin/bash\n#   with standard command\ncd app && python main.py --ugps_host http://192.168.2.94 --mavlink_host http://192.168.2.2:6040 --qgc_ip 192.168.2.1\n#   or with demo server\ncd app && python main.py --ugps_host https://demo.waterlinked.com --mavlink_host http://192.168.2.2:6040 --qgc_ip 192.168.2.1\n# end interactive session\nexit\n\n# then stop/start/look at log with\ndocker stop [container-id]\ndocker start [container-id]\ndocker log [container-id] # if run detached\n\n# if you are a developer, upload to registry with (replace latest with desired tag)\ndocker login -u waterlinked\ndocker push waterlinked/blueos-ugps-extension:latest\n```",
                "support": "https://github.com/waterlinked/blueos-ugps-extension",
                "requirements": "core >= 1",
                "company": {
                    "about": "",
                    "name": "Blue Robotics / Water Linked",
                    "email": "support@bluerobotics.com / support@waterlinked.com"
                },
                "permissions": {
                    "NetworkMode": "host",
                    "Env": [
                        "UGPS_HOST=http://192.168.2.94",
                        "MAVLINK_HOST=http://192.168.2.2:6040",
                        "QGC_IP=192.168.2.1"
                    ]
                }
            }
        }
    },
    {
        "identifier": "patrickelectric.ros",
        "name": "ROS",
        "website": "https://github.com/patrickelectric/blueos-ros",
        "docker": "patrickelectric/blueos-ros",
        "description": "Robot Operating System (ROS) extension for BlueOS",
        "extension_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/patrickelectric/ros/extension_logo.png",
        "company_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/patrickelectric/company_logo.png",
        "versions": {
            "0.0.1": {
                "identifier": "f96c26c2-5c7b-5d91-adce-2c30cf1b0fc0",
                "type": "other",
                "website": null,
                "images": [
                    {
                        "expanded_size": 369666474,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:9b159ab65e4d0b1d541460865aab4cabf9173de7163221d229522cb47a4ae381"
                    }
                ],
                "authors": [
                    {
                        "name": "Patrick Jos\u00e9 Pereira",
                        "email": "patrickelectric@gmail.com"
                    }
                ],
                "filter_tags": [
                    "ros",
                    "robot"
                ],
                "extra_links": {},
                "tag": "0.0.1",
                "docs": null,
                "readme": "# BlueOS ROS extension\r\n\r\nThis extension makes possible to communicate with the vehicle via ROS\r\n\r\nTo connect, you just need to run the following commands:\r\n```sh\r\nexport ROS_MASTER_URI=http://blueos.local:11311\r\n# or export ROS_MASTER_URI=http://<vehicle-ip>:11311\r\nrostopic list # Done, you already have access to it!\r\n```\r\n\r\nYou can also access the data via [roslibjs]([url](http://wiki.ros.org/roslibjs)http://wiki.ros.org/roslibjs).\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta charset=\"utf-8\" />\r\n\r\n<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/roslibjs/1.1.0/roslib.min.js\"></script>\r\n\r\n<script type=\"text/javascript\" type=\"text/javascript\">\r\n  var ros = new ROSLIB.Ros({\r\n    url : 'ws://blueos.local:8889' // Change if necessary for your vehicle ip\r\n  });\r\n\r\n  ros.on('connection', function() {\r\n    document.getElementById(\"status\").innerHTML = \"Connected\";\r\n  });\r\n\r\n  ros.on('error', function(error) {\r\n    document.getElementById(\"status\").innerHTML = \"Error\";\r\n  });\r\n\r\n  ros.on('close', function() {\r\n    document.getElementById(\"status\").innerHTML = \"Closed\";\r\n  });\r\n\r\n  var txt_listener = new ROSLIB.Topic({\r\n    ros : ros,\r\n    name : '/mavros/vfr_hud',\r\n    messageType : 'mavros_msgs/VFR_HUD'\r\n  });\r\n\r\n  txt_listener.subscribe(function(m) {\r\n    document.getElementById(\"msg\").innerHTML = JSON.stringify(m);\r\n  });\r\n</script>\r\n</head>\r\n\r\n<body>\r\n  <h1>Simple ROS User Interface</h1>\r\n  <p>Connection status: <span id=\"status\"></span></p>\r\n  <p>Last /mavros/vfr_hud received: <span id=\"msg\"></span></p>\r\n</body>\r\n</html>\r\n```\r\n\r\n## Use a different ROS master origin\r\n\r\nIt's possible to change ROS master for the extension using BlueOS on pirate mode and configuring ROS environments variables under the extension configuration menu.\r\n\r\nA valid configurtion wouyld look like this:\r\n\r\n```json5\r\n{\r\n  \"NetworkMode\": \"host\",\r\n  \"HostConfig\": {\r\n  \"Binds\": [\r\n    \"/dev:/dev:rw\"\r\n  ],\r\n    \"Privileged\": true,\r\n    \"NetworkMode\": \"host\"\r\n  },\r\n  \"Env\": [\r\n    \"ROS_HOSTNAME=192.168.2.2\",\r\n    \"ROS_MASTER_URI=http://192.168.2.3:11311\",\r\n    \"ROS_IP=192.168.2.2\"\r\n  ]\r\n}\r\n```\r\n\r\nFor more information about it, check [BlueOS documentation](https://blueos.cloud/docs/blueos/1.1/development/extensions/).\r\n",
                "support": null,
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Binds": [
                            "/dev:/dev:rw"
                        ],
                        "Privileged": true,
                        "NetworkMode": "host"
                    }
                }
            }
        }
    },
    {
        "identifier": "patrickelectric.jupyter",
        "name": "Jupyter",
        "website": "https://github.com/patrickelectric/blueos-jupyter",
        "docker": "patrickelectric/blueos-jupyter",
        "description": "Code in Python directly in BlueOS",
        "extension_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/patrickelectric/jupyter/extension_logo.png",
        "company_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/patrickelectric/company_logo.png",
        "versions": {
            "0.1.0": {
                "identifier": "a420e07c-4c48-5d5b-a3af-c359f4a93a24",
                "type": "other",
                "website": null,
                "images": [
                    {
                        "expanded_size": 946708030,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:7fbecadd64e1b484f67a6cafda92c3f4b9630e277d83a4288196ebbf01af336f"
                    }
                ],
                "authors": [
                    {
                        "name": "Patrick Jos\u00e9 Pereira",
                        "email": "patrickelectric@gmail.com"
                    },
                    {
                        "name": "Raul Victor Trombin",
                        "email": "raulvtrombin@gmail.com"
                    }
                ],
                "filter_tags": [
                    "python",
                    "ide",
                    "development"
                ],
                "extra_links": {},
                "tag": "0.1.0",
                "docs": null,
                "readme": "# blueos-jupyter\n\nExtension to start coding with python examples and create projects.\n\nTo install your own libraries, use: `pip install --user`.\n\nHome directory (`/root/`) will be persistent besides pip local holder for user libraries.\n\nLibraries installed:\n- bluerobotics-ping\n- bluerobotics-navigator\n- plotly\n- pymavlink\n",
                "support": null,
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Blue Robotics",
                    "email": "support@bluerobotics.com"
                },
                "permissions": {
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Privileged": true,
                        "Binds": [
                            "/usr/blueos/extensions/jupyter/root:/root:rw",
                            "/dev:/dev:rw"
                        ],
                        "NetworkMode": "host"
                    }
                }
            }
        }
    },
    {
        "identifier": "ceruleansonar.cerulean-docs",
        "name": "Cerulean Docs",
        "website": "https://github.com/ceruleansonar/BlueOS-Cerulean-Docs/",
        "docker": "nicknothom/blueos-cerulean-docs",
        "description": "Offline access for Cerulean Documentation",
        "extension_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/ceruleansonar/company_logo.png",
        "company_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/ceruleansonar/company_logo.png",
        "versions": {
            "v1.1.0": {
                "identifier": "d50945d9-c307-5261-b40d-1f260ac0b6a4",
                "type": "other",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 175566507,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:bd71575157ca09fdb6a1b2f8072d56ea27ff0ef9176375d789d893f70cfa7a50"
                    },
                    {
                        "expanded_size": 170030192,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:bb85774c6ced6dae9b9b75cc66a3c0f2aeb20c61b5cb5ad37e393f688c93e843"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.1.0",
                "docs": null,
                "readme": "# BlueOS Cerulean Docs\n\nHosts a mirror of the [Cerulean Docs](https://docs.ceruleaonsonar.com) on the ROV so they can be viewed offline. ",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": "core >  1",
                "company": {
                    "about": "",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "NetworkMode": "host"
                }
            },
            "v1.0.0": {
                "identifier": "e6424a8a-3f3c-5312-9511-6d58f284e9fe",
                "type": "other",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 175622566,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:16039d43f4823cf408e2a44d93438c33caf6d00f4b716e4028b2e3314d04b40e"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.0",
                "docs": null,
                "readme": "# BlueOS Cerulean Docs\n\nHosts a mirror of the [Cerulean Docs](https://docs.ceruleaonsonar.com) on the ROV so they can be viewed offline. ",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": "core >  1",
                "company": {
                    "about": "",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "80/tcp": {}
                    },
                    "HostConfig": {
                        "PortBindings": {
                            "80/tcp": [
                                {
                                    "HostPort": ""
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    {
        "identifier": "ceruleansonar.sonarview",
        "name": "SonarView",
        "website": "https://sonarview.io/",
        "docker": "nicknothom/sonarview",
        "description": "Cross platform sonar viewing application",
        "extension_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/ceruleansonar/company_logo.png",
        "company_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/ceruleansonar/company_logo.png",
        "versions": {
            "1.10.0-beta.5": {
                "identifier": "3891d46c-944e-5dd0-aa43-8ef3423d9201",
                "type": "device-integration",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 103018372,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:b8c6495e4031fb5eab9641f0c266a7aaf7f1ef907b54d5883a730e96eeade6ae"
                    },
                    {
                        "expanded_size": 101205315,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:8fa0cb03edec8552eb104850491165926039a031687de6fd3f8db05cd3b42024"
                    },
                    {
                        "expanded_size": 103010712,
                        "platform": {
                            "architecture": "arm64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:c4e286446d505203abdc9572c9613b4ddcebdc0f14683753fc8e58550ad3488c"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "1.10.0-beta.5",
                "docs": null,
                "readme": "# SonarView\n\n[Get the latest release here](https://github.com/CeruleanSonar/SonarView/releases/latest)\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "Cerulean Sonar: Advanced Technology. Sensibly Priced.",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "HostConfig": {
                        "NetworkMode": "host",
                        "Binds": [
                            "/usr/blueos/userdata/SonarView:/userdata"
                        ]
                    }
                }
            },
            "1.10.0-beta.4": {
                "identifier": "06ad512b-596b-5943-9a53-7046445e0bf7",
                "type": "device-integration",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 103011920,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:7f3e8b88b5720d4da56d7b0ec15c83cf092094ab453932417123bb1e3717493b"
                    },
                    {
                        "expanded_size": 101198927,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:573434b0d1ad6e9a65bd1a29ec77ee16ed7392411b73adc6a739d2acbec3481d"
                    },
                    {
                        "expanded_size": 103004371,
                        "platform": {
                            "architecture": "arm64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:c17274aa0b0acb9fc2a4eea0367b7d1cdcc02b5f2c1c6c6add073a5a651ba713"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "1.10.0-beta.4",
                "docs": null,
                "readme": "# SonarView\n\n[Get the latest release here](https://github.com/CeruleanSonar/SonarView/releases/latest)\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "Cerulean Sonar: Advanced Technology. Sensibly Priced.",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "HostConfig": {
                        "NetworkMode": "host",
                        "Binds": [
                            "/usr/blueos/userdata/SonarView:/userdata"
                        ]
                    }
                }
            },
            "1.10.0-beta.1": {
                "identifier": "7b278514-5be9-5a08-951b-4498a58723c9",
                "type": "device-integration",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 51580261,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:1630cd67cd6a00d95b825cb7c04c49f2e5f560e5f1b1eb21761ccde8063389be"
                    },
                    {
                        "expanded_size": 49771027,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:85161c073ce12e2097dda21e71e5802b274c470d939ef8ae2a09fd09f0ef2b7c"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "1.10.0-beta.1",
                "docs": null,
                "readme": "# SonarView\n\n[Get the latest release here](https://github.com/CeruleanSonar/SonarView/releases/latest)\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "Cerulean Sonar: Advanced Technology. Sensibly Priced.",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "HostConfig": {
                        "NetworkMode": "host",
                        "Binds": [
                            "/usr/blueos/userdata/SonarView:/userdata"
                        ]
                    }
                }
            },
            "1.9.12": {
                "identifier": "325dc850-1974-5133-b4c6-b04c2c34eb77",
                "type": "device-integration",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 51580194,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:2884f1b7ae0d6cf5e198f64458bc44a418e04432bdba5b812ca02721d9f0aac9"
                    },
                    {
                        "expanded_size": 49771292,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:d3f23d2b3c9cb79a7d476e929d68a86ede6a2eb1c7aef38241ac02c9f5abc966"
                    },
                    {
                        "expanded_size": 51579078,
                        "platform": {
                            "architecture": "arm64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:d67581f6647a453e6b368cdf348e97ca7dc635aca9e3436b0b9355dc547947f6"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "1.9.12",
                "docs": null,
                "readme": "# SonarView\n\n[Get the latest release here](https://github.com/CeruleanSonar/SonarView/releases/latest)\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "Cerulean Sonar: Advanced Technology. Sensibly Priced.",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "HostConfig": {
                        "NetworkMode": "host",
                        "Binds": [
                            "/usr/blueos/userdata/SonarView:/userdata"
                        ]
                    }
                }
            },
            "1.9.12-beta.9": {
                "identifier": "572ecada-021f-5961-9c71-c79deb82fe25",
                "type": "device-integration",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 44662782,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:d6df72a318702657bc906168a6f42b74fe2a6b06fd0d51432db7901551cfdbd3"
                    },
                    {
                        "expanded_size": 42853862,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:d9521aca36f3adb67a84358499748d9386edfead62f1ca0838dec52ef9422382"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "1.9.12-beta.9",
                "docs": null,
                "readme": "# SonarView\n\n[Get the latest release here](https://github.com/CeruleanSonar/SonarView/releases/latest)\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "Cerulean Sonar: Advanced Technology. Sensibly Priced.",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "HostConfig": {
                        "NetworkMode": "host",
                        "Binds": [
                            "/usr/blueos/userdata/SonarView:/userdata"
                        ]
                    }
                }
            },
            "1.9.12-beta.8": {
                "identifier": "e2d5ea6f-d93b-5db2-8c6f-c10c1d652ea6",
                "type": "device-integration",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 44663580,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:f28eb276d147a8c5b33f766568758ea1262b42a512ba14ecbdd3702a03bf7609"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "1.9.12-beta.8",
                "docs": null,
                "readme": "# SonarView\n\n[Get the latest release here](https://github.com/CeruleanSonar/SonarView/releases/latest)\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "Cerulean Sonar: Advanced Technology. Sensibly Priced.",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "HostConfig": {
                        "NetworkMode": "host",
                        "Binds": [
                            "/usr/blueos/userdata/SonarView:/userdata"
                        ]
                    }
                }
            },
            "1.9.12-beta.7": {
                "identifier": "37cf3df4-a47b-5787-8c68-2ce193cc9224",
                "type": "device-integration",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 42093819,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:f813cd7f5be1895be141b816a6f216fde2b191f710a054ce61f8411cd2896af0"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "1.9.12-beta.7",
                "docs": null,
                "readme": "# SonarView\n\n[Get the latest release here](https://github.com/CeruleanSonar/SonarView/releases/latest)\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "Cerulean Sonar: Advanced Technology. Sensibly Priced.",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "HostConfig": {
                        "NetworkMode": "host",
                        "Binds": [
                            "/usr/blueos/userdata/SonarView:/userdata"
                        ]
                    }
                }
            },
            "1.9.10-beta": {
                "identifier": "928cbe63-a345-597c-9842-912381024d38",
                "type": "device-integration",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 37537954,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:dbde9a9f8144cc232224b67a73e61ef853e99f59682fb6e449cc7b6173b388b9"
                    },
                    {
                        "expanded_size": 35750482,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:0864648de9a0b21141eeb3f6bfd0a7bb065a7b32033ad9c10e01a81504d25272"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "1.9.10-beta",
                "docs": null,
                "readme": "# SonarView\n\n[Get the latest release here](https://github.com/CeruleanSonar/SonarView/releases/latest)\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "Cerulean Sonar: Advanced Technology. Sensibly Priced.",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "HostConfig": {
                        "NetworkMode": "host",
                        "Binds": [
                            "/usr/blueos/userdata/SonarView:/userdata"
                        ]
                    }
                }
            },
            "1.9.8": {
                "identifier": "3d33dc4f-e0cd-5018-836f-a1103bef5a6a",
                "type": "device-integration",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 72808777,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:5a89bc379242f3d477f5ee63d83bd41259e0c9f30a9b4e6c7c64dd5259ef7999"
                    },
                    {
                        "expanded_size": 71022758,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:835ef36209e513f79662b5647c49db8956a7d294e3b0fac7a1fb351d68296e29"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "1.9.8",
                "docs": null,
                "readme": "# SonarView\n\n[Get the latest release here](https://github.com/CeruleanSonar/SonarView/releases/latest)\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "Cerulean Sonar: Advanced Technology. Sensibly Priced.",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "HostConfig": {
                        "NetworkMode": "host",
                        "Binds": [
                            "/usr/blueos/userdata/SonarView:/userdata"
                        ]
                    }
                }
            },
            "1.9.7": {
                "identifier": "84568eec-06cf-5d1f-8be6-13370e975317",
                "type": "device-integration",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 37352684,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:e5fd060a84f428907d131fec6f3db6155a63e26b007549607168590662bd0a6e"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "1.9.7",
                "docs": null,
                "readme": "# SonarView\n\n[Get the latest release here](https://github.com/CeruleanSonar/SonarView/releases/latest)\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "Cerulean Sonar: Advanced Technology. Sensibly Priced.",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "HostConfig": {
                        "NetworkMode": "host",
                        "Binds": [
                            "/usr/blueos/userdata/SonarView:/userdata"
                        ]
                    }
                }
            },
            "1.9.5-beta": {
                "identifier": "957939f1-d143-5746-8ce6-c77b6058ce77",
                "type": "device-integration",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 37322172,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:284a1ce24317ac244cfecc64b51eb575066fa4ea9494296ad32444266d5262da"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "1.9.5-beta",
                "docs": null,
                "readme": "# SonarView\n\n[Get the latest release here](https://github.com/CeruleanSonar/SonarView/releases/latest)\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "Cerulean Sonar: Advanced Technology. Sensibly Priced.",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "HostConfig": {
                        "NetworkMode": "host",
                        "Binds": [
                            "/usr/blueos/userdata/SonarView:/userdata"
                        ]
                    }
                }
            },
            "1.9.4-beta": {
                "identifier": "a3147341-4ef6-5d6c-9996-b20af70a479a",
                "type": "device-integration",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 37322814,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:83485dc7b0da830af6f36335b66b300037bce1a50a8c15539e199bc5b5ae63a2"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "1.9.4-beta",
                "docs": null,
                "readme": "# SonarView\n\n[Get the latest release here](https://github.com/CeruleanSonar/SonarView/releases/latest)\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "Cerulean Sonar: Advanced Technology. Sensibly Priced.",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "HostConfig": {
                        "NetworkMode": "host",
                        "Binds": [
                            "/usr/blueos/userdata/SonarView:/userdata"
                        ]
                    }
                }
            },
            "1.8.9": {
                "identifier": "9a7a409f-5c18-5c3e-b8df-9c8bf2a69959",
                "type": "device-integration",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 40153725,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:cd327daa249b1b355617531db9f751ff2099ef3e2881c736f2e12eff31c97daf"
                    },
                    {
                        "expanded_size": 38383327,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:a21de0655ed73d40b7415f5e85bd727d709c9517d9960b10e2d4e5dee49624e9"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "1.8.9",
                "docs": null,
                "readme": "# SonarView\n\n[Get the latest release here](https://github.com/CeruleanSonar/SonarView/releases/latest)\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "Cerulean Sonar: Advanced Technology. Sensibly Priced.",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "HostConfig": {
                        "NetworkMode": "host",
                        "Binds": [
                            "/usr/blueos/userdata/SonarView:/userdata"
                        ]
                    }
                }
            },
            "1.8.8": {
                "identifier": "fb4fabcc-f735-59ce-a42d-2789ee981753",
                "type": "device-integration",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 40153513,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:e383cb1e41637b2fbaa30684bbba68373cf655cbe3ca7c4f23fbce15b467a23e"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "1.8.8",
                "docs": null,
                "readme": "# SonarView\n\n[Get the latest release here](https://github.com/CeruleanSonar/SonarView/releases/latest)\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "Cerulean Sonar: Advanced Technology. Sensibly Priced.",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "HostConfig": {
                        "NetworkMode": "host",
                        "Binds": [
                            "/usr/blueos/userdata/SonarView:/userdata"
                        ]
                    }
                }
            },
            "1.8.7": {
                "identifier": "0b5db325-ab1d-58c5-ab75-2bdb770062fd",
                "type": "device-integration",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 40152206,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:e54452a1e20c18535c96f84dd53004ee43f23350c1dc59ce035ca424f327ee62"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "1.8.7",
                "docs": null,
                "readme": "# SonarView\n\n[Get the latest release here](https://github.com/CeruleanSonar/SonarView/releases/latest)\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "Cerulean Sonar: Advanced Technology. Sensibly Priced.",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "HostConfig": {
                        "NetworkMode": "host",
                        "Binds": [
                            "/usr/blueos/userdata/SonarView:/userdata"
                        ]
                    }
                }
            },
            "1.8.6": {
                "identifier": "ae85d4e9-b505-5fee-8b4a-bfde53c2ce1c",
                "type": "device-integration",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 88682483,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:0b4f1108a4b8dfe4b578340c737a1abdb80390aaac27d9fd1c96a36ef25dfb71"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "1.8.6",
                "docs": null,
                "readme": "# SonarView\n\n[Get the latest release here](https://github.com/CeruleanSonar/SonarView/releases/latest)\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "Cerulean Sonar: Advanced Technology. Sensibly Priced.",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "HostConfig": {
                        "NetworkMode": "host",
                        "Binds": [
                            "/usr/blueos/userdata/SonarView:/userdata"
                        ]
                    }
                }
            },
            "1.8.4": {
                "identifier": "e2190f62-0752-5376-85f7-b20f3a894c90",
                "type": "device-integration",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 88682992,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:438de8ade5df2138b3cf547eed234d3714363eed3274dbe84afe0c609fbc6dda"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "1.8.4",
                "docs": null,
                "readme": "# SonarView\n\n[Get the latest release here](https://github.com/CeruleanSonar/SonarView/releases/latest)\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "Cerulean Sonar: Advanced Technology. Sensibly Priced.",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "7077/tcp": {}
                    },
                    "HostConfig": {
                        "Binds": [
                            "/usr/blueos/userdata/SonarView:/userdata"
                        ],
                        "PortBindings": {
                            "7077/tcp": [
                                {
                                    "HostPort": "7077"
                                }
                            ]
                        }
                    }
                }
            },
            "v1.8.3": {
                "identifier": "fd80de19-5c32-5101-937c-f1e094ce7d20",
                "type": "device-integration",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 88682992,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:438de8ade5df2138b3cf547eed234d3714363eed3274dbe84afe0c609fbc6dda"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.8.3",
                "docs": null,
                "readme": "# SonarView\n\n[Get the latest release here](https://github.com/CeruleanSonar/SonarView/releases/latest)\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "Cerulean Sonar: Advanced Technology. Sensibly Priced.",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "ExposedPorts": {
                        "7077/tcp": {}
                    },
                    "HostConfig": {
                        "Binds": [
                            "/usr/blueos/userdata/SonarView:/userdata"
                        ],
                        "PortBindings": {
                            "7077/tcp": [
                                {
                                    "HostPort": "7077"
                                }
                            ]
                        }
                    }
                }
            },
            "v1.8.0": {
                "identifier": "c3aec70f-583f-511f-8182-54e01dfb2d6c",
                "type": "other",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 211965325,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:a0b1e746fa1f084c51c28212fc69702c993c393c952a9c2d4c62bdb323459014"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.8.0",
                "docs": null,
                "readme": "# SonarView\n\n[Get the latest release here](https://github.com/CeruleanSonar/SonarView/releases/latest)\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Binds": [
                            "/usr/blueos/userdata/SonarView:/userdata"
                        ]
                    }
                }
            },
            "v1.7.0": {
                "identifier": "941aa767-6942-5c8d-bcbf-7d7be4ef568f",
                "type": "other",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 211805077,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:e0a26d7c8cc8a2284f0cb87b91e228a7295f4b49fe2c54b5859f8df53939e1c2"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.7.0",
                "docs": null,
                "readme": "# SonarView\n\n[Get the latest release here](https://github.com/CeruleanSonar/SonarView/releases/latest)\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "NetworkMode": "host"
                }
            },
            "v1.6.0": {
                "identifier": "24f37979-7e67-5ffe-bed3-7256c993fe29",
                "type": "other",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 211808388,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:1b204fba77d384ba749438f336a93bc59c9553c71b92a6a4f6445b2866d42a94"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.6.0",
                "docs": null,
                "readme": "# SonarView\n\n[Get the latest release here](https://github.com/CeruleanSonar/SonarView/releases/latest)\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "NetworkMode": "host"
                }
            },
            "v1.5.6": {
                "identifier": "3a754d6f-752d-5aba-8e9f-a6aa191f75a8",
                "type": "other",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 213188027,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:04b5b0fb80df9efd4a916458373fbfa1c224aef8aad13d947c63280f3ecda691"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.5.6",
                "docs": null,
                "readme": "# SonarView\n\n[Get the latest release here](https://github.com/CeruleanSonar/SonarView/releases/latest)\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "NetworkMode": "host"
                }
            },
            "v1.5.3": {
                "identifier": "c023a21a-e698-5c5a-b73c-c47ed8a7d191",
                "type": "other",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 228960777,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:0ebec5d7354aef2d54892b93751c8be9400dc75ba807e9748bc9a004dbc20802"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.5.3",
                "docs": null,
                "readme": "# SonarView\n\n[Get the latest release here](https://github.com/CeruleanSonar/SonarView/releases/latest)\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "NetworkMode": "host"
                }
            }
        }
    },
    {
        "identifier": "ceruleansonar.cerulean-dvl",
        "name": "Cerulean DVL",
        "website": "https://github.com/ceruleansonar/BlueOS-Cerulean-DVL/",
        "docker": "nicknothom/blueos-cerulean-dvl",
        "description": "BlueOS extension for Cerulean DVL",
        "extension_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/ceruleansonar/company_logo.png",
        "company_logo": "https://raw.githubusercontent.com/bluerobotics/BlueOS-Extensions-Repository/master/repos/ceruleansonar/company_logo.png",
        "versions": {
            "v1.0.8": {
                "identifier": "aa686520-e5f6-5cfb-ac69-b414de3e694a",
                "type": "other",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 109619325,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:40bdaa212803402e97dcd013000c5991ddc950ce4120a93bdd8e30b876e26324"
                    },
                    {
                        "expanded_size": 100085882,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:e208ec461095ed3491a3c38ab7913afe855d9850b4f29f13e620c4f71715bc8c"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.8",
                "docs": null,
                "readme": "# BlueOS-Cerulean-DVL\n\nCerulean DVL driver, compatible with Blue Robotics BlueOS.\n\n## Manual Installation: \n\nTo set this up, ssh into the Raspberry Pi (or access via `red-pill` in [BlueOS Terminal](https://docs.bluerobotics.com/ardusub-zola/software/onboard/BlueOS-1.0/advanced-usage/#terminal)) and run\n\n`sudo docker run -d --net=host -v /root/.config/cerulean:/root/.config --name=BlueOS-Cerulean-DVL --restart=unless-stopped nicknothom/blueos-cerulean-dvl:latest\n`\n\nThe service will show in the \"Available Services\" section in BlueOS, where there are some configuration options.\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "HostConfig": {
                        "NetworkMode": "host",
                        "Binds": [
                            "/root/.config/cerulean:/root/.config"
                        ]
                    }
                }
            },
            "v1.0.7": {
                "identifier": "8f856745-ea5b-56a3-87fe-c893f0bf2a9a",
                "type": "other",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 109619348,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:063633731be76427d7be0266216d618a1769287135f0c879a4488506f5feb553"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.7",
                "docs": null,
                "readme": "# BlueOS-Cerulean-DVL\n\nCerulean DVL driver, compatible with Blue Robotics BlueOS.\n\n## Manual Installation: \n\nTo set this up, ssh into the Raspberry Pi (or access via `red-pill` in [BlueOS Terminal](https://docs.bluerobotics.com/ardusub-zola/software/onboard/BlueOS-1.0/advanced-usage/#terminal)) and run\n\n`sudo docker run -d --net=host -v /root/.config/cerulean:/root/.config --name=BlueOS-Cerulean-DVL --restart=unless-stopped nicknothom/blueos-cerulean-dvl:latest\n`\n\nThe service will show in the \"Available Services\" section in BlueOS, where there are some configuration options.\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "HostConfig": {
                        "NetworkMode": "host",
                        "Binds": [
                            "/root/.config/cerulean:/root/.config"
                        ]
                    }
                }
            },
            "v1.0.6": {
                "identifier": "b52186e9-c76e-5768-bf31-d34231668d0e",
                "type": "other",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 109617694,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:2638f474a73f2eb41bb1a5f237cd72eac2078d55cc3501d04c503bfa82cbe854"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.6",
                "docs": null,
                "readme": "# BlueOS-Cerulean-DVL\n\nCerulean DVL driver, compatible with Blue Robotics BlueOS.\n\n## Manual Installation: \n\nTo set this up, ssh into the Raspberry Pi (or access via `red-pill` in [BlueOS Terminal](https://docs.bluerobotics.com/ardusub-zola/software/onboard/BlueOS-1.0/advanced-usage/#terminal)) and run\n\n`sudo docker run -d --net=host -v /root/.config/cerulean:/root/.config --name=BlueOS-Cerulean-DVL --restart=unless-stopped nicknothom/blueos-cerulean-dvl:latest\n`\n\nThe service will show in the \"Available Services\" section in BlueOS, where there are some configuration options.\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Binds": [
                            "/root/.config/cerulean:/root/.config"
                        ]
                    }
                }
            },
            "v1.0.5": {
                "identifier": "eb83e2bc-7f5a-5eb5-b5ab-95ca97364c27",
                "type": "other",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 109559450,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:49315a9023689999db2e765c1c8478ebd8decfe2904ba287349268442aa969bd"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.5",
                "docs": null,
                "readme": "# BlueOS-Cerulean-DVL\n\nCerulean DVL driver, compatible with Blue Robotics BlueOS.\n\n## Manual Installation: \n\nTo set this up, ssh into the Raspberry Pi (or access via `red-pill` in [BlueOS Terminal](https://docs.bluerobotics.com/ardusub-zola/software/onboard/BlueOS-1.0/advanced-usage/#terminal)) and run\n\n`sudo docker run -d --net=host -v /root/.config/cerulean:/root/.config --name=BlueOS-Cerulean-DVL --restart=unless-stopped nicknothom/blueos-cerulean-dvl:latest\n`\n\nThe service will show in the \"Available Services\" section in BlueOS, where there are some configuration options.\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "NetworkMode": "host",
                    "HostConfig": {
                        "Binds": [
                            "/root/.config/blueos:/root/.config"
                        ]
                    }
                }
            },
            "v1.0.4": {
                "identifier": "2056eda3-d739-511c-a708-054d2ef830c2",
                "type": "other",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 109534449,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:43fac24a1199fe0c9bcf5b61df0278f56197b744285cf30d8316bf7d1065e983"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.4",
                "docs": null,
                "readme": "# BlueOS-Cerulean-DVL\n\nCerulean DVL driver, compatible with Blue Robotics BlueOS.\n\n## Manual Installation: \n\nTo set this up, ssh into the Raspberry Pi (or access via `red-pill` in [BlueOS Terminal](https://docs.bluerobotics.com/ardusub-zola/software/onboard/BlueOS-1.0/advanced-usage/#terminal)) and run\n\n`sudo docker run -d --net=host -v /root/.config/cerulean:/root/.config --name=BlueOS-Cerulean-DVL --restart=unless-stopped nicknothom/blueos-cerulean-dvl:latest\n`\n\nThe service will show in the \"Available Services\" section in BlueOS, where there are some configuration options.\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "NetworkMode": "host"
                }
            },
            "v1.0.2": {
                "identifier": "57d15a76-04cd-515d-a297-58a4bb60088e",
                "type": "other",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 109912487,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:9c14841b20f85887b029071ae14592ac0235ed0764256743b1db398b294a727b"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.2",
                "docs": null,
                "readme": "# BlueOS-Cerulean-DVL\n\nCerulean DVL driver, compatible with Blue Robotics BlueOS.\n\n## Manual Installation: \n\nTo set this up, ssh into the Raspberry Pi (or access via `red-pill` in [BlueOS Terminal](https://docs.bluerobotics.com/ardusub-zola/software/onboard/BlueOS-1.0/advanced-usage/#terminal)) and run\n\n`sudo docker run -d --net=host -v /root/.config/cerulean:/root/.config --name=BlueOS-Cerulean-DVL --restart=unless-stopped nicknothom/blueos-cerulean-dvl:latest\n`\n\nThe service will show in the \"Available Services\" section in BlueOS, where there are some configuration options.\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "NetworkMode": "host"
                }
            },
            "v1.0.1": {
                "identifier": "5fda492f-72b4-54c0-bd0f-fca4761a0bfd",
                "type": "other",
                "website": "https://ceruleansonar.com",
                "images": [
                    {
                        "expanded_size": 109912491,
                        "platform": {
                            "architecture": "amd64",
                            "variant": null,
                            "os": "linux"
                        },
                        "digest": "sha256:d5e8e487e02db3573da4b82b5c1bffcfd7dc56115aabc9e31d46b441205e8678"
                    },
                    {
                        "expanded_size": 100174019,
                        "platform": {
                            "architecture": "arm",
                            "variant": "v7",
                            "os": "linux"
                        },
                        "digest": "sha256:11543c36b10be611293248778bc7b924eea38b7bfa47f39701c1b72d3b9a288f"
                    }
                ],
                "authors": [
                    {
                        "name": "Nick Nothom",
                        "email": "nick.nothom@ceruleansonar.com"
                    }
                ],
                "filter_tags": [],
                "extra_links": {},
                "tag": "v1.0.1",
                "docs": null,
                "readme": "# BlueOS-Cerulean-DVL\n\nCerulean DVL driver, compatible with Blue Robotics BlueOS.\n\n## Manual Installation: \n\nTo set this up, ssh into the Raspberry Pi (or access via `red-pill` in [BlueOS Terminal](https://docs.bluerobotics.com/ardusub-zola/software/onboard/BlueOS-1.0/advanced-usage/#terminal)) and run\n\n`sudo docker run -d --net=host -v /root/.config/cerulean:/root/.config --name=BlueOS-Cerulean-DVL --restart=unless-stopped nicknothom/blueos-cerulean-dvl:latest\n`\n\nThe service will show in the \"Available Services\" section in BlueOS, where there are some configuration options.\n",
                "support": "https://forum.ceruleansonar.com/categories",
                "requirements": null,
                "company": {
                    "about": "",
                    "name": "Cerulean Sonar",
                    "email": "dennys.bisogno@ceruleansonar.com"
                },
                "permissions": {
                    "NetworkMode": "host"
                }
            }
        }
    }
]